[{"/Users/samuelwright/Projects/portfolio/src/index.js":"1","/Users/samuelwright/Projects/portfolio/src/reportWebVitals.js":"2","/Users/samuelwright/Projects/portfolio/src/AppManager.js":"3","/Users/samuelwright/Projects/portfolio/src/firebase.js":"4","/Users/samuelwright/Projects/portfolio/src/Resources/mapsKey.js":"5","/Users/samuelwright/Projects/portfolio/src/Resources/firebaseKey.js":"6","/Users/samuelwright/Projects/portfolio/src/Components/index.js":"7","/Users/samuelwright/Projects/portfolio/src/Components/Footer/index.js":"8","/Users/samuelwright/Projects/portfolio/src/Components/Contact/index.js":"9","/Users/samuelwright/Projects/portfolio/src/Components/Header/index.js":"10","/Users/samuelwright/Projects/portfolio/src/Components/Location/index.js":"11","/Users/samuelwright/Projects/portfolio/src/Components/Map/index.js":"12","/Users/samuelwright/Projects/portfolio/src/Components/Projects/index.js":"13","/Users/samuelwright/Projects/portfolio/src/Components/Skills/index.js":"14","/Users/samuelwright/Projects/portfolio/src/Components/Tag/index.js":"15","/Users/samuelwright/Projects/portfolio/src/Pages/index.js":"16","/Users/samuelwright/Projects/portfolio/src/Pages/Resume/index.js":"17","/Users/samuelwright/Projects/portfolio/src/Pages/Home/index.js":"18","/Users/samuelwright/Projects/portfolio/src/Components/Nav/index.js":"19","/Users/samuelwright/Projects/portfolio/src/App.js":"20","/Users/samuelwright/Projects/portfolio/src/Context/DataContext.js":"21","/Users/samuelwright/Projects/portfolio/src/Pages/Projects/index.js":"22","/Users/samuelwright/Projects/portfolio/src/Pages/About/index.js":"23","/Users/samuelwright/Projects/portfolio/src/Pages/Contact/index.js":"24","/Users/samuelwright/Projects/portfolio/src/Pages/Work/index.js":"25","/Users/samuelwright/Projects/portfolio/src/Context/ThemeContext.js":"26","/Users/samuelwright/Projects/portfolio/src/Pages/Skills/index.js":"27"},{"size":578,"mtime":1669050455129,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1610654342212,"results":"30","hashOfConfig":"31"},{"size":131,"mtime":1611319188045,"results":"32","hashOfConfig":"29"},{"size":559,"mtime":1624360673141,"results":"33","hashOfConfig":"29"},{"size":80,"mtime":1641801299060,"results":"34","hashOfConfig":"29"},{"size":89,"mtime":1641441009397,"results":"35","hashOfConfig":"29"},{"size":404,"mtime":1669050455110,"results":"36","hashOfConfig":"29"},{"size":405,"mtime":1665905787809,"results":"37","hashOfConfig":"29"},{"size":6588,"mtime":1669050455099,"results":"38","hashOfConfig":"29"},{"size":7830,"mtime":1653334335483,"results":"39","hashOfConfig":"29"},{"size":406,"mtime":1645470690659,"results":"40","hashOfConfig":"29"},{"size":2230,"mtime":1645470766349,"results":"41","hashOfConfig":"29"},{"size":3774,"mtime":1669073662699,"results":"42","hashOfConfig":"29"},{"size":361,"mtime":1669050455107,"results":"43","hashOfConfig":"29"},{"size":660,"mtime":1649739250008,"results":"44","hashOfConfig":"29"},{"size":341,"mtime":1669072499304,"results":"45","hashOfConfig":"29"},{"size":2945,"mtime":1653336177841,"results":"46","hashOfConfig":"29"},{"size":1011,"mtime":1669054153400,"results":"47","hashOfConfig":"29"},{"size":5034,"mtime":1669050455101,"results":"48","hashOfConfig":"29"},{"size":1480,"mtime":1669075163057,"results":"49","hashOfConfig":"29"},{"size":373,"mtime":1669050455111,"results":"50","hashOfConfig":"29"},{"size":487,"mtime":1669073695633,"results":"51","hashOfConfig":"29"},{"size":643,"mtime":1669050455113,"results":"52","hashOfConfig":"29"},{"size":2398,"mtime":1669073873786,"results":"53","hashOfConfig":"29"},{"size":1425,"mtime":1669053206247,"results":"54","hashOfConfig":"29"},{"size":351,"mtime":1669054998371,"results":"55","hashOfConfig":"29"},{"size":412,"mtime":1669072461545,"results":"56","hashOfConfig":"29"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"nwhp2",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10l9jrj",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"59"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/samuelwright/Projects/portfolio/src/index.js",[],["116","117"],"/Users/samuelwright/Projects/portfolio/src/reportWebVitals.js",[],"/Users/samuelwright/Projects/portfolio/src/AppManager.js",[],"/Users/samuelwright/Projects/portfolio/src/firebase.js",[],"/Users/samuelwright/Projects/portfolio/src/Resources/mapsKey.js",[],"/Users/samuelwright/Projects/portfolio/src/Resources/firebaseKey.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Footer/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Contact/index.js",["118","119"],"import React, { Component } from 'react';\n\nimport { db } from '../../firebase';\nimport './style.css'\n\nclass Contact extends Component {\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            name: '',\n            email: '',\n            message: '',\n            dataSent: ''\n       }\n       this.handleSubmit = this.handleSubmit.bind(this);\n       this.resetSend = this.resetSend.bind(this)\n    }\n\n    makeid(length) {\n        var result = \"\";\n        var characters =\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        var charactersLength = 10;\n        for (var i = 0; i < length; i++) {\n          result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    handleSubmit(event) {\n        // Make a unique name for the message\n        var d = new Date();\n        var msgName = String(this.state.name + '-' + d.getTime());\n\n        // Get date of message\n        var date = String( d.getMonth() + 1) + '-' + String( d.getDate()) + '-' + String(d.getFullYear())\n\n        // Get time of message\n        var minutes = ()=>{\n            var a;\n            if (d.getMinutes() < 10) {\n                a = String('0' + d.getUTCMinutes());\n            } else {\n                a = String(d.getUTCMinutes());\n            }\n\n            return a;\n        }\n\n        var time = String(d.getHours()) + ':' + minutes() + '.' + String(d.getSeconds());\n        \n        // Make new id\n        var id = this.makeid(10);\n\n        // Add message to database\n        db.collection(\"messages\").doc(msgName).set({\n            name: this.state.name,\n            email: this.state.email,\n            message: this.state.message,\n            date: date,\n            time: time,\n            timezone: d.getTimezoneOffset(),\n            id: id\n        })\n        .then(() => {\n            console.log(\"Great news! Message sent successfully!\");\n            /*console.log({\n                name: this.state.name,\n                email: this.state.email,\n                message: this.state.message,\n                date: date,\n                time: time,\n                timezone: d.getTimezoneOffset(),\n                id: id\n            })*/\n        })\n        .catch((error) => {\n            console.error(\"Krikey! Error sending message: \", error);\n        });\n\n        // For component to show message was sent\n        if (!this.state.datasent){\n            this.setState({dataSent: true});\n        } \n    }\n\n    resetSend() {\n        this.setState({dataSent: false});\n    }\n    \n    render (){\n        let contactInfoStyle = {\n            textAlign: 'center',\n            marginTop: 15,\n            width: '100%',\n        }\n        let contactInfoStyle2 = {\n            textAlign: 'center',\n            fontSize: '.8em',\n            color: 'rgb(1,1,1,.25)',\n        }\n        let formOptionStyle = {\n            textAlign: 'center'\n        }\n        let contactFormStyle = {\n            maxWidth: 450,\n            margin: 'auto',\n            padding: '0 3%',\n        }\n        let contactFormBtn = {\n            margin: 'auto',\n            display: 'block',\n            padding: '5px 25px',\n            outline: 'none',\n            background: 'rgba(0, 187, 16, .5)',\n            border: '1pt solid white',\n            color: 'white',\n            fontSize: '1.2em',\n            borderRadius: '25px',\n        }\n        let contactFormBtn2 = {\n            margin: 'auto',\n            display: 'block',\n            padding: '5px 25px',\n            outline: 'none',\n            background: 'lightgray',\n            border: '1pt solid white',\n            color: 'white',\n            fontSize: '1.2em',\n            borderRadius: '25px',\n        }\n        \n        return (\n            <div className={\"container\"} id=\"contact-container\">\n                <div>\n                    <p style={{\n                        textAlign: 'center',\n                        display: 'none',\n                    }}>\n                        Schedule an appointment \n                        <a style={{\n                        \n                        }} href=\"https://calendly.com/sleighs\" target=\"blank\">here</a>\n                    </p>\n                </div>\n\n                {this.state.dataSent ?\n                <div className=\"msg\"style={{ textAlign: 'center' }}>\n                    <br/>\n                    <p style={{ fontSize: '1.2em' }}>Great news! Message sent successfully!</p>\n                    <button className=\"new-message-btn\" style={contactFormBtn2} onClick={(e)=>{this.resetSend()}}>New Message</button>\n                </div> :\n                <form style={contactFormStyle} >\n                    <div style={formOptionStyle}>\n                        <p>Or use this contact form below:</p>\n                    </div>\n                    <div className=\"form-group\"> \n                        <label name=\"inputName\">Your Name</label>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"name-input\" \n                            name=\"name\" value={this.state.name}  \n                            onChange={(e)=>{this.setState({ name: e.target.value })}}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label name=\"inputEmail\">Your Email</label>\n                        <input type=\"email\" \n                            className=\"form-control\" \n                            id=\"email-input\" \n                            aria-describedby=\"emailHelp\" \n                            value={this.state.email} \n                            onChange={(e)=>{this.setState({ email: e.target.value })}}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label name=\"inputMessage\" className=\"form-text\">Your Message </label>\n                        <textarea type=\"text\" \n                            className=\"form-control\" \n                            id=\"message-input\" \n                            name=\"text-area\" \n                            value={this.state.message} \n                            onChange={(e)=>{this.setState({ message: e.target.value })}}\n                        />\n                    </div>\n                    <input type=\"submit\" className={\"input for-control submit\"} style={contactFormBtn} value=\"Send\" onClick={(e)=>{this.handleSubmit(e)}}/>\n                    </form>}\n            </div>\n        )\n    }\n}\n\nexport default Contact;","/Users/samuelwright/Projects/portfolio/src/Components/Header/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Location/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Map/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Projects/index.js",["120"],"/Users/samuelwright/Projects/portfolio/src/Components/Skills/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Tag/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Pages/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Pages/Resume/index.js",["121","122","123","124","125"],"import React, { Component, useState } from 'react';\nimport Cookies from 'universal-cookie'\nimport { \n  Header,\n  Skills,\n  Projects,\n  Location,\n  Contact,\n  Footer\n} from '../../Components';\nimport '../../App.css';\n\nconst cookiesDarkMode = new Cookies()\nconst darkModeCookies = cookiesDarkMode.get('darkModeData')\n\nclass Resume extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      textColor: 'black',\n      backgroundColor: 'white',\n      darkMode: false,\n    }\n\n    this.toggleDarkMode = this.toggleDarkMode.bind(this);\n  }\n\n  componentDidMount(){\n    if (darkModeCookies === true){\n      this.setState({\n        textColor: 'white',\n        backgroundColor: 'black',\n        darkMode: true,\n      })\n    }\n  }\n\n  toggleDarkMode(){\n    if (!this.state.darkMode){\n      this.setState({\n        textColor: 'white',\n        backgroundColor: 'black',\n        darkMode: true,\n      })\n      cookiesDarkMode.set(\n        'darkModeData', \n        true, \n        {path:'/', maxAge: 1200,}\n      )\n    } else {\n      this.setState({\n        textColor: 'black',\n        backgroundColor: 'white',\n        darkMode: false,\n      })\n      cookiesDarkMode.set(\n        'darkModeData', \n        false, \n        {path:'/', maxAge: 1200,}\n      )\n    }\n    \n  }\n\n  render() {\n    let portfolioStyle = {\n      fontSize: '1.2em',\n    }\n\n    return (\n      <div \n        style={{\n          height: '100%',\n          maxWidth: '871px',\n          margin: 'auto',\n          color: this.state.textColor,\n          backgroundColor: this.state.backgroundColor,\n        }}\n      > \n        <div \n          id=\"portfolio\" \n          className={\"container-md\"} \n          style={portfolioStyle}\n        >\n          <Header resumePage={true}/>\n          <Skills resumePage={true}/>\n          <hr/>\n          <br/>\n          <Projects resumePage={true}/>\n          <br/>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nclass Github extends Component {\n  render() {\n    return(\n      <div id=\"github-container\" >\n        <h3 className=\"title\"><strong>DO I HAVE A GITHUB?</strong></h3>\n        <p id=\"github-text\" style={{\n            fontSize: 28,\n        }}>Yes.</p>\n        <p className='github-text'><a  href=\"http://www.github.com/sleighs\" target=\"blank\">github.com/sleighs</a></p>\n      </div>\n    )\n  }\n  \n}\n\nconst DarkMode = (props) => {\n  const { \n    modeState,\n    toggle\n  } = props\n\n  const [darkModeState, getDarkModeState] = useState(modeState)\n\n  return(\n    <div id=\"dark-mode-container\" \n      style={{\n        display: 'none',\n        position: 'absolute',\n      }}>\n      <button onClick={()=>{\n        if (darkModeState === true){\n          toggle()\n          getDarkModeState(false)\n        } else {\n          toggle()\n          getDarkModeState(true)\n        }\n\n        console.log('darkMode ', modeState )\n      }}>\n        {modeState === true ? 'Dark On' : 'Light On'}\n      </button>\n    </div>\n  )\n}\n\nexport default Resume;\n","/Users/samuelwright/Projects/portfolio/src/Pages/Home/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Nav/index.js",["126","127"],"import React, { useContext, useState } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { ThemeContext } from '../../Context/ThemeContext';\nimport './style.css'\n\nexport default function MainNav(props) {\n    const {pageLocation, setPageLocation} = props\n\n    const { theme } = useContext(ThemeContext)\n\n    const [isNavExpanded, setIsNavExpanded] = useState(false);\n    \n    const scrollTo = (id) => {\n      const section = document.getElementById(id);\n      //section.scrollIntoView( { behavior: 'smooth', block: 'start' } );\n    };\n\n    const navigateTo = () => {}\n\n    return (\n      <nav className=\"navigation\">\n        <Link to=\"/\" className=\"main-nav__list-item brand-name\" \n          onClick={()=>{setPageLocation('home'); scrollTo('logo');}}\n          style={{display: 'none'}}>\n          {'logo'}\n        </Link> \n        <button\n          className=\"hamburger\"\n          onClick={()=> {\n            setPageLocation('home');\n            setIsNavExpanded(!isNavExpanded);\n          }}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-5 w-5\"\n            viewBox=\"0 0 20 20\"\n            fill=\"white\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d={`\n                M3 5a1 \n                1 0 011-1h12a1 \n                1 0 110 2H4a1 \n                1 0 01-1-1z \n                \n                M3 10a1 \n                1 0 011-1h12a1 \n                1 0 110 2H4a1\n                1 0 01-1-1z  \n                \n                M3 15a1 \n                1 0 011-1h12a1 \n                1 0 110 2H4a1 \n                1 0 01-1-1z`}\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        </button>\n        <div\n          className={\n            isNavExpanded ? \"navigation-menu expanded\" : \"navigation-menu\"\n          }\n        >\n          <ul>\n            <li className=\"main-nav__list-item-container\">\n              <Link to=\"/\"\n                className=\n                {\n                  pageLocation === 'home' \n                  ? `nav-link-highlighted main-nav__list-item` \n                  : `nav-link-normal main-nav__list-item main-nav__list-item-${theme}`\n                }\n                onClick={() => {\n                  setPageLocation('home');\n                  scrollTo('home');\n                  setIsNavExpanded(!isNavExpanded);\n                }}\n              >\n                home\n              </Link> \n            </li>\n            <li className=\"main-nav__list-item-container\">\n              <Link to=\"/projects\"\n                className=\n                {\n                  pageLocation === 'projects' \n                  ? `nav-link-highlighted main-nav__list-item` \n                  : `nav-link-normal main-nav__list-item main-nav__list-item-${theme}`\n                }\n                onClick={() => {\n                  setPageLocation('projects');\n                  scrollTo('projects');\n                  setIsNavExpanded(!isNavExpanded);\n                }}\n              >\n                projects\n              </Link> \n            </li>\n            <li className=\"main-nav__list-item-container\">\n              <Link to=\"/about\"\n                className=\n                {\n                  pageLocation === 'about' \n                  ? `nav-link-highlighted main-nav__list-item` \n                  : `nav-link-normal main-nav__list-item main-nav__list-item-${theme}`\n                } \n                onClick={() => {\n                  setPageLocation('about');\n                  scrollTo('about');\n                  setIsNavExpanded(!isNavExpanded);\n                }}\n              >\n                about\n              </Link>\n            </li>\n            <li className=\"main-nav__list-item-container\">\n              <Link to=\"/work\"\n                className=\n                {\n                  pageLocation === 'work' \n                  ? `nav-link-highlighted main-nav__list-item` \n                  : `nav-link-normal main-nav__list-item main-nav__list-item-${theme}`\n                }\n                onClick={() => {\n                  setPageLocation('work');\n                  scrollTo('work');\n                  setIsNavExpanded(!isNavExpanded);\n                }}\n              >\n                work\n              </Link> \n            </li>\n            <li className=\"main-nav__list-item-container\">\n              <Link to=\"/contact\" \n                className=\n                {\n                  pageLocation === 'contact' \n                  ? `nav-link-highlighted main-nav__list-item` \n                  : `nav-link-normal main-nav__list-item main-nav__list-item-${theme}`\n                }\n                onClick={() => {\n                  setPageLocation('contact');\n                  scrollTo('contact');\n                  setIsNavExpanded(!isNavExpanded);\n                }}\n              >\n                contact\n              </Link> \n            </li>\n            \n                        \n          </ul>\n        </div>\n      </nav>\n    );\n  }\n  ","/Users/samuelwright/Projects/portfolio/src/App.js",[],"/Users/samuelwright/Projects/portfolio/src/Context/DataContext.js",[],"/Users/samuelwright/Projects/portfolio/src/Pages/Projects/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Pages/About/index.js",["128","129","130","131","132","133","134","135","136"],"import React, { Component, useContext, useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Cookies from 'universal-cookie'\nimport { Projects, Skills } from '../../Components';\n\nimport { DataContext } from '../../Context/DataContext';\nimport './style-mobile.css';\nimport './style.css'\n\nconst AboutPage = (props) => {\n  return (\n    <div id='about-container'>\n      <div className='section about-section' id='about'>\n        <div id=\"about-header\">\n          <h3 id=\"about-title\" className=\"section-title\"><strong>About</strong></h3>\n        </div>\n        \n      </div>\n    </div>\n  )\n}\n\nexport default AboutPage;\n","/Users/samuelwright/Projects/portfolio/src/Pages/Contact/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Pages/Work/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Context/ThemeContext.js",[],"/Users/samuelwright/Projects/portfolio/src/Pages/Skills/index.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":93,"column":13,"nodeType":"143","messageId":"144","endLine":93,"endColumn":29},{"ruleId":"141","severity":1,"message":"145","line":98,"column":13,"nodeType":"143","messageId":"144","endLine":98,"endColumn":30},{"ruleId":"141","severity":1,"message":"146","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":22},{"ruleId":"141","severity":1,"message":"147","line":7,"column":3,"nodeType":"143","messageId":"144","endLine":7,"endColumn":11},{"ruleId":"141","severity":1,"message":"148","line":8,"column":3,"nodeType":"143","messageId":"144","endLine":8,"endColumn":10},{"ruleId":"141","severity":1,"message":"149","line":9,"column":3,"nodeType":"143","messageId":"144","endLine":9,"endColumn":9},{"ruleId":"141","severity":1,"message":"150","line":98,"column":7,"nodeType":"143","messageId":"144","endLine":98,"endColumn":13},{"ruleId":"141","severity":1,"message":"151","line":113,"column":7,"nodeType":"143","messageId":"144","endLine":113,"endColumn":15},{"ruleId":"141","severity":1,"message":"152","line":14,"column":13,"nodeType":"143","messageId":"144","endLine":14,"endColumn":20},{"ruleId":"141","severity":1,"message":"153","line":18,"column":11,"nodeType":"143","messageId":"144","endLine":18,"endColumn":21},{"ruleId":"141","severity":1,"message":"154","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"155","line":1,"column":28,"nodeType":"143","messageId":"144","endLine":1,"endColumn":38},{"ruleId":"141","severity":1,"message":"156","line":1,"column":40,"nodeType":"143","messageId":"144","endLine":1,"endColumn":48},{"ruleId":"141","severity":1,"message":"157","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":16},{"ruleId":"141","severity":1,"message":"158","line":2,"column":18,"nodeType":"143","messageId":"144","endLine":2,"endColumn":23},{"ruleId":"141","severity":1,"message":"159","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":15},{"ruleId":"141","severity":1,"message":"160","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":18},{"ruleId":"141","severity":1,"message":"161","line":4,"column":20,"nodeType":"143","messageId":"144","endLine":4,"endColumn":26},{"ruleId":"141","severity":1,"message":"162","line":6,"column":10,"nodeType":"143","messageId":"144","endLine":6,"endColumn":21},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'contactInfoStyle' is assigned a value but never used.","Identifier","unusedVar","'contactInfoStyle2' is assigned a value but never used.","'realityCalcPic' is defined but never used.","'Location' is defined but never used.","'Contact' is defined but never used.","'Footer' is defined but never used.","'Github' is defined but never used.","'DarkMode' is assigned a value but never used.","'section' is assigned a value but never used.","'navigateTo' is assigned a value but never used.","'Component' is defined but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'Cookies' is defined but never used.","'Projects' is defined but never used.","'Skills' is defined but never used.","'DataContext' is defined but never used.","no-global-assign","no-unsafe-negation"]