[{"/Users/samuelwright/Projects/portfolio/src/index.js":"1","/Users/samuelwright/Projects/portfolio/src/reportWebVitals.js":"2","/Users/samuelwright/Projects/portfolio/src/AppManager.js":"3","/Users/samuelwright/Projects/portfolio/src/firebase.js":"4","/Users/samuelwright/Projects/portfolio/src/Resources/mapsKey.js":"5","/Users/samuelwright/Projects/portfolio/src/Resources/firebaseKey.js":"6","/Users/samuelwright/Projects/portfolio/src/Components/index.js":"7","/Users/samuelwright/Projects/portfolio/src/Components/Footer/index.js":"8","/Users/samuelwright/Projects/portfolio/src/Components/Contact/index.js":"9","/Users/samuelwright/Projects/portfolio/src/Components/Header/index.js":"10","/Users/samuelwright/Projects/portfolio/src/Components/Location/index.js":"11","/Users/samuelwright/Projects/portfolio/src/Components/Map/index.js":"12","/Users/samuelwright/Projects/portfolio/src/Components/Projects/index.js":"13","/Users/samuelwright/Projects/portfolio/src/Components/Skills/index.js":"14","/Users/samuelwright/Projects/portfolio/src/Components/Tag/index.js":"15","/Users/samuelwright/Projects/portfolio/src/Pages/index.js":"16","/Users/samuelwright/Projects/portfolio/src/Pages/Resume/index.js":"17","/Users/samuelwright/Projects/portfolio/src/Pages/Home/index.js":"18","/Users/samuelwright/Projects/portfolio/src/Components/Nav/index.js":"19","/Users/samuelwright/Projects/portfolio/src/App.js":"20","/Users/samuelwright/Projects/portfolio/src/Context/DataContext.js":"21","/Users/samuelwright/Projects/portfolio/src/Pages/Projects/index.js":"22","/Users/samuelwright/Projects/portfolio/src/Pages/About/index.js":"23","/Users/samuelwright/Projects/portfolio/src/Pages/Contact/index.js":"24","/Users/samuelwright/Projects/portfolio/src/Pages/Work/index.js":"25","/Users/samuelwright/Projects/portfolio/src/Context/ThemeContext.js":"26","/Users/samuelwright/Projects/portfolio/src/Pages/Skills/index.js":"27","/Users/samuelwright/Projects/portfolio/src/Resources/Images/logos/index.js":"28","/Users/samuelwright/Projects/portfolio/src/Components/Intro/index.js":"29","/Users/samuelwright/Projects/portfolio/src/Components/ContactInfo/index.js":"30","/Users/samuelwright/Projects/portfolio/src/Components/ThemeToggle/index.js":"31"},{"size":578,"mtime":1675815550296,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1610654342212,"results":"34","hashOfConfig":"35"},{"size":131,"mtime":1611319188045,"results":"36","hashOfConfig":"33"},{"size":660,"mtime":1675815550293,"results":"37","hashOfConfig":"33"},{"size":80,"mtime":1641801299060,"results":"38","hashOfConfig":"33"},{"size":89,"mtime":1641441009397,"results":"39","hashOfConfig":"33"},{"size":517,"mtime":1675815550131,"results":"40","hashOfConfig":"33"},{"size":3143,"mtime":1675815550105,"results":"41","hashOfConfig":"33"},{"size":7440,"mtime":1675815550101,"results":"42","hashOfConfig":"33"},{"size":7830,"mtime":1653334335483,"results":"43","hashOfConfig":"33"},{"size":281,"mtime":1675815550111,"results":"44","hashOfConfig":"33"},{"size":2453,"mtime":1675815550121,"results":"45","hashOfConfig":"33"},{"size":7299,"mtime":1675894813009,"results":"46","hashOfConfig":"33"},{"size":2204,"mtime":1675815550126,"results":"47","hashOfConfig":"33"},{"size":660,"mtime":1649739250008,"results":"48","hashOfConfig":"33"},{"size":341,"mtime":1675815550165,"results":"49","hashOfConfig":"33"},{"size":2947,"mtime":1675815550158,"results":"50","hashOfConfig":"33"},{"size":1170,"mtime":1675821295586,"results":"51","hashOfConfig":"33"},{"size":12013,"mtime":1675815550122,"results":"52","hashOfConfig":"33"},{"size":1258,"mtime":1675815550100,"results":"53","hashOfConfig":"33"},{"size":373,"mtime":1675815550132,"results":"54","hashOfConfig":"33"},{"size":487,"mtime":1675815550153,"results":"55","hashOfConfig":"33"},{"size":522,"mtime":1675815550135,"results":"56","hashOfConfig":"33"},{"size":2520,"mtime":1675815550137,"results":"57","hashOfConfig":"33"},{"size":1445,"mtime":1675815550163,"results":"58","hashOfConfig":"33"},{"size":609,"mtime":1675815550133,"results":"59","hashOfConfig":"33"},{"size":466,"mtime":1675815550160,"results":"60","hashOfConfig":"33"},{"size":1126,"mtime":1675815550274,"results":"61","hashOfConfig":"33"},{"size":1034,"mtime":1675815550107,"results":"62","hashOfConfig":"33"},{"size":2932,"mtime":1675815550103,"results":"63","hashOfConfig":"33"},{"size":1542,"mtime":1675815550129,"results":"64","hashOfConfig":"33"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"nwhp2",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10l9jrj",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"67"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"67"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"67"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"67"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"67"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"67"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"/Users/samuelwright/Projects/portfolio/src/index.js",[],["139","140"],"/Users/samuelwright/Projects/portfolio/src/reportWebVitals.js",[],"/Users/samuelwright/Projects/portfolio/src/AppManager.js",[],"/Users/samuelwright/Projects/portfolio/src/firebase.js",[],"/Users/samuelwright/Projects/portfolio/src/Resources/mapsKey.js",[],["141","142"],"/Users/samuelwright/Projects/portfolio/src/Resources/firebaseKey.js",[],["143","144"],"/Users/samuelwright/Projects/portfolio/src/Components/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Footer/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Contact/index.js",["145","146","147","148","149","150","151","152","153","154"],"import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { DataContext } from '../../Context/DataContext';\nimport { ThemeContext } from '../../Context/ThemeContext';\nimport githubPic from '../../Resources/Images/portfolio-github.png';\nimport emailPic from '../../Resources/Images/envelope-solid.png';\nimport mobilePic from '../../Resources/Images/mobile-icon.png';\nimport mobile2Pic from '../../Resources/Images/phone.svg';\nimport mobile3Pic from '../../Resources/Images/phone-fill.svg';\n \nimport { db } from '../../firebase';\nimport './style.css'\n\nconst Contact = (props) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        message: '',\n    })\n    const [dataSent, setDataSent] = useState(false)\n\n    const { setPageLocation } = useContext(DataContext)\n    const { theme } = useContext(ThemeContext)\n\n    const hiddenRef = useRef();\n\n    useEffect(() => {\n        window.addEventListener('scroll', scrollHandler);\n        return () => window.removeEventListener('scroll', scrollHandler);\n    }, []);\n    \n    const scrollHandler = () => {\n        if(window.pageYOffset + window.innerHeight >= hiddenRef.current.offsetTop + 125) {\n            setPageLocation('contact')\n        }\n    }\n\n    function makeid(length) {\n        var result = \"\";\n        var characters =\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        var charactersLength = 10;\n        for (var i = 0; i < length; i++) {\n          result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    const handleChange = e => {\n        setFormData(prevData => {\n            return {\n                ...prevData,\n                [e.target.name]: e.target.value\n            }\n        })\n    }\n\n    function handleSubmit(event) {\n        // Make a unique name for the message\n        var d = new Date();\n        var msgName = String(formData.name + '-' + d.getTime());\n\n        // Get date of message\n        var date = String( d.getMonth() + 1) + '-' + String( d.getDate()) + '-' + String(d.getFullYear())\n\n        // Get time of message\n        var minutes = ()=>{\n            var a;\n            if (d.getMinutes() < 10) {\n                a = String('0' + d.getUTCMinutes());\n            } else {\n                a = String(d.getUTCMinutes());\n            }\n\n            return a;\n        }\n\n        var time = String(d.getHours()) + ':' + minutes() + '.' + String(d.getSeconds());\n        \n        // Make new id\n        var id = makeid(10);\n\n        // Add message to database\n        db.collection(\"messages\").doc(msgName).set({\n            name: formData.name,\n            email: formData.email,\n            message: formData.message,\n            date: date,\n            time: time,\n            timezone: d.getTimezoneOffset(),\n            id: id\n        })\n        .then(() => {\n            console.log(\"Great news! Message sent successfully!\");\n            /*console.log({\n                name: formData.name,\n                email: formData.email,\n                message: formData.message,\n                date: date,\n                time: time,\n                timezone: d.getTimezoneOffset(),\n                id: id\n            })*/\n        })\n        .catch((error) => {\n            console.error(\"Krikey! Error sending message: \", error);\n        });\n\n        // For component to show message was sent\n        if (!dataSent){\n            setDataSent(true)\n        } \n    }\n\n    function resetSend() {\n        setDataSent(false)\n    }\n    \n    \n    let contactInfoStyle = {\n        textAlign: 'center',\n        marginTop: 15,\n        width: '100%',\n    }\n    let contactInfoStyle2 = {\n        textAlign: 'center',\n        fontSize: '.8em',\n        color: 'rgb(1,1,1,.25)',\n    }\n    let formOptionStyle = {\n        textAlign: 'center'\n    }\n\n    let contactFormBtn = {\n        margin: 'auto',\n        display: 'block',\n        padding: '2px 25px',\n        outline: 'none',\n        background: 'rgba(255, 71, 70, 1)',\n        color: 'white',\n        fontWeight: 'bold',\n        fontSize: '1.4em',\n        width: '100%',\n        border: '0pt solid white',\n        //borderRadius: '25px',\n    }\n    let contactFormBtn2 = {\n        margin: 'auto',\n        display: 'block',\n        padding: '5px 25px',\n        outline: 'none',\n        background: 'white',\n        border: '1pt solid rgba(255,71,70)',\n        color: 'black',\n        fontSize: '1.2em',\n        borderRadius: '25px',\n    }\n        \n    return (\n        <div className={\"container\"} id=\"contact-container\" ref={hiddenRef}>\n            <div>\n                <p style={{\n                    textAlign: 'center',\n                    display: 'none',\n                }}>\n                    Schedule an appointment \n                    <a style={{\n                    \n                    }} href=\"https://calendly.com/sleighs\" target=\"blank\">here</a>\n                </p>\n            </div>\n\n            {dataSent \n            ? <div className=\"msg\"style={{ textAlign: 'center' }}>\n                <br/>\n                <p style={{ fontSize: '1.2em' }}>Message sent!</p>\n                <button className=\"new-message-btn\" \n                    style={contactFormBtn2} \n                    onClick={(e)=>{resetSend()}}>New Message</button>\n            </div> \n            : <form className='contact-form' >\n                <div style={/*formOptionStyle, */{display: 'none',}} >\n                    <p>Or use this contact form below:</p>\n                </div>\n                <div style={{display: 'none',}} className=\"form-group contact-form__input-container\"> \n                    <label name=\"inputName\" className=\"form-text\">Name</label>\n                    <input type=\"text\" \n                        className=\"form-control\" \n                        id=\"name-input\" \n                        \n                        name=\"name\" value={formData.name}  \n                        onChange={(e)=>{handleChange(e)}}\n                    />\n                </div>\n                <div className=\"form-group contact-form__input-container\">\n                    <label name=\"inputEmail\" className=\"form-text\">Email</label>\n                    <input type=\"email\" \n                        className=\"form-control\" \n                        id=\"email-input\" \n                        placeholder='your@email.com'\n                        aria-describedby=\"emailHelp\" \n                        value={formData.email} \n                        name=\"email\"\n                        onChange={(e)=>{handleChange(e)}}\n                    />\n                </div>\n                <div className=\"form-group contact-form__input-container\">\n                    <label name=\"inputMessage\" className=\"form-text\">Message</label>\n                    <textarea type=\"text\" \n                        className=\"form-control form-msg\" \n                        id=\"message-input\" \n                        placeholder='Message...'\n                        name=\"message\" \n                        value={formData.message} \n                        onChange={(e)=>{handleChange(e)}}                    />\n                </div>\n                <input type=\"submit\" className={\"input for-control submit\"} style={contactFormBtn} value=\"Send\" \n                    onClick={(e)=>{e.preventDefault(); handleSubmit(e);}}/>\n                </form>}\n        </div>\n    )\n}\n\nexport default Contact;","/Users/samuelwright/Projects/portfolio/src/Components/Header/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Location/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Map/index.js",["155"],"import React, { Component, useEffect, useState } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport '../../App.css';\n\nconst apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n\nexport function MapContainer(props) {\n  const [state, setState] = useState({\n    showingInfoWindow: false,\n    activeMarker: {\n      lat: 39.855,\n      lng: -75.008\n    },          \n    selectedPlace: {}          \n  })\n\n  useEffect(() => {\n    document.getElementById('map-container').children[1].children[0].style.position = 'relative';\n  },[])\n    \n  /*const toggleBounce = () => {\n      if (state.marker.getAnimation() !== null) {\n        //marker.setAnimation(null);\n      } else {\n        //this.setState({ });\n        //marker.setAnimation(window.google.maps.Animation.BOUNCE);\n      }\n  }*/\n\n  const onMarkerClick = (props, marker, e) => {\n    setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: false\n    });\n\n    //toggleBounce();\n  }\n    \n  /*\n  const onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };*/\n\n  const mapStyle = {\n    width: '100%',\n    height: '280px',\n    position: 'relative',\n    display: 'flex',\n    margin: '20px 0',\n  };\n\n  return (\n    <Map\n      google={props.google}\n      zoom={6}\n      style={mapStyle}\n      initialCenter={\n        {\n          lat: 39.8534057,\n          lng: -74.9828451\n        }\n      }\n    >\n      <Marker\n        onClick={onMarkerClick}\n        name={'Where I\\'m At'}\n        draggable={false}\n        animation={window.google.maps.Animation.DROP}\n        visible={true}\n      />\n      <Marker \n        name={'Favorite place to eat'}\n        draggable={false}\n        position={{\n          lat: 39.8569142,\n          lng: -75.0034956,\n        }} \n        visible={false}\n      />\n      <Marker \n        name={'Favorite park'}\n        draggable={false}\n        position={{\n          lat: 39.9169778,\n          lng: -75.0581273,\n        }} \n        visible={false}\n      />\n      <InfoWindow\n        marker={state.activeMarker}\n        visible={state.showingInfoWindow}\n        onClose={props.onClose}\n      >\n        <div className=\"map-info\">\n          <h4>{state.selectedPlace.name}</h4>\n        </div>\n      </InfoWindow>\n    </Map>\n  )\n}\n\nexport default GoogleApiWrapper({\n  apiKey: apiKey,\n})(MapContainer);","/Users/samuelwright/Projects/portfolio/src/Components/Projects/index.js",["156"],"/Users/samuelwright/Projects/portfolio/src/Components/Skills/index.js",["157","158","159","160"],"import React, { useContext, useEffect, useRef, useState } from 'react';\nimport logoPics from '../../Resources/Images/logos';\nimport './style.css'\nimport { ThemeContext } from '../../Context/ThemeContext';\nimport { DataContext } from '../../Context/DataContext';\n\nconst Skills = (props) => {\n  const { setPageLocation } = useContext(DataContext)\n\n  const hiddenRef = useRef();\n\n  const [frontEndSkills, setFrontEndSkills]\t= useState([\n\t'javascript', \n\t'react',\n\t'redux',\n\t'HTML5',\n\t'CSS3',\n\t'sass',\n\t'bootstrap',\n  ])\n  const [backEndSkills, setBackEndSkills] = useState([\n\t'mongodb',\n\t'node',\n\t'python',\n\t'firebase'\n  ])\n  const [otherSkills, setOtherSkills] = useState([\n\t'git',\n\t'AdobeXD',\n\t'photoshop',\n\t'linux',\n\t'jest'\n  ])\n\n  useEffect(() => {\n\twindow.addEventListener('scroll', scrollHandler);\n\treturn () => window.removeEventListener('scroll', scrollHandler);\n  }, []);\n\n  const scrollHandler = () => {\n\tif(window.pageYOffset + window.innerHeight >= hiddenRef.current.offsetTop + 125) {\n\t\tsetPageLocation('about')\n\t}\n  }\n\n  return (\n\t<div className=\"container container-md\" id=\"skills-container\" ref={hiddenRef}>\n\t  <div className=\"skills__list\" id=\"skills-list1\">\n\t\t<h3 className=\"section-subtitle\">Front-end</h3>\n\t\t<div className=\"skills__front-end\">\n\t\t\t{\n\t\t\t\tfrontEndSkills.map((item, index) => <SkillBox name={item} key={index}/>)\n\t\t\t}\n\t\t</div>\n\t  </div>\n\t  <div className=\"skills__list\" id=\"skills-list2\">\n\t\t<h3 className=\"section-subtitle\">Back-end</h3>\n\t\t<div className=\"skills__back-end\">\n\t\t\t{\n\t\t\t\tbackEndSkills.map((item, index) => <SkillBox name={item} key={index}/>)\n\t\t\t}\n\t\t</div>\n\t  </div>\n\t  <div className=\"skills__list\" id=\"skills-list3\">\n\t\t<h3 className=\"section-subtitle\">Other</h3>\n\t\t<div className=\"skills__other\">\n\t\t\t{\n\t\t\t\totherSkills.map((item, index) => <SkillBox name={item} key={index}/>)\n\t\t\t}\n\t\t</div>\n\t  </div>\n\t</div>\n  )\n}\n\n\nconst SkillBox = (props) => {\n\tconst { theme } = useContext(ThemeContext)\n\n\treturn (\n\t\t<div className={\"skills__logo-container skills__logo-container-\" + theme}>\n\t\t\t<img className=\"skills__logo-img\" src={logoPics[props.name]} alt={props.name} />\n\t\t\t<span className=\"skills__logo-text\">{props.name}</span>\n\t\t</div> \n\t)\n}\n\nexport default Skills;","/Users/samuelwright/Projects/portfolio/src/Components/Tag/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Pages/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Pages/Resume/index.js",["161","162","163","164","165"],"import React, { Component, useState } from 'react';\nimport Cookies from 'universal-cookie'\nimport { \n  Header,\n  Skills,\n  Projects,\n  Location,\n  Contact,\n  Footer\n} from '../../Components';\nimport '../../App.css';\n\nconst cookiesDarkMode = new Cookies()\nconst darkModeCookies = cookiesDarkMode.get('darkModeData')\n\nclass Resume extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      textColor: 'black',\n      backgroundColor: 'white',\n      darkMode: false,\n    }\n\n    this.toggleDarkMode = this.toggleDarkMode.bind(this);\n  }\n\n  componentDidMount(){\n    if (darkModeCookies === true){\n      this.setState({\n        textColor: 'white',\n        backgroundColor: 'black',\n        darkMode: true,\n      })\n    }\n  }\n\n  toggleDarkMode(){\n    if (!this.state.darkMode){\n      this.setState({\n        textColor: 'white',\n        backgroundColor: 'black',\n        darkMode: true,\n      })\n      cookiesDarkMode.set(\n        'darkModeData', \n        true, \n        {path:'/', maxAge: 1200,}\n      )\n    } else {\n      this.setState({\n        textColor: 'black',\n        backgroundColor: 'white',\n        darkMode: false,\n      })\n      cookiesDarkMode.set(\n        'darkModeData', \n        false, \n        {path:'/', maxAge: 1200,}\n      )\n    }\n    \n  }\n\n  render() {\n    let portfolioStyle = {\n      fontSize: '1.2em',\n    }\n\n    return (\n      <div \n        style={{\n          height: '100%',\n          maxWidth: '871px',\n          margin: 'auto',\n          color: this.state.textColor,\n          backgroundColor: this.state.backgroundColor,\n        }}\n      > \n        <div \n          id=\"portfolio\" \n          className={\"container-md\"} \n          style={portfolioStyle}\n        >\n          <Header resumePage={true}/>\n          <Skills resumePage={true}/>\n          <hr/>\n          <br/>\n          <Projects resumePage={true}/>\n          <br/>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nclass Github extends Component {\n  render() {\n    return(\n      <div id=\"github-container\" >\n        <h3 className=\"title\"><strong>DO I HAVE A GITHUB?</strong></h3>\n        <p id=\"github-text\" style={{\n            fontSize: 28,\n        }}>Yes.</p>\n        <p className='github-text'><a  href=\"http://www.github.com/sleighs\" target=\"blank\">github.com/sleighs</a></p>\n      </div>\n    )\n  }\n  \n}\n\nconst DarkMode = (props) => {\n  const { \n    modeState,\n    toggle\n  } = props\n\n  const [darkModeState, getDarkModeState] = useState(modeState)\n\n  return(\n    <div id=\"dark-mode-container\" \n      style={{\n        display: 'none',\n        position: 'absolute',\n      }}>\n      <button onClick={()=>{\n        if (darkModeState === true){\n          toggle()\n          getDarkModeState(false)\n        } else {\n          toggle()\n          getDarkModeState(true)\n        }\n\n        //console.log('darkMode ', modeState )\n      }}>\n        {modeState === true ? 'Dark On' : 'Light On'}\n      </button>\n    </div>\n  )\n}\n\nexport default Resume;\n","/Users/samuelwright/Projects/portfolio/src/Pages/Home/index.js",["166"],"import React, { useContext } from 'react';\nimport { Contact, ContactInfo, Location, Projects, Skills } from '../../Components';\nimport Intro from '../../Components/Intro';\nimport { ThemeContext } from '../../Context/ThemeContext';\nimport './style-mobile.css';\nimport './style-svg.css';\nimport './style.css';\n\nconst HomePage = (props) => {\n  const { theme } = useContext(ThemeContext)\n\n  return (\n    <div id='home-container'>    \n      <div className={\"intro-container intro-container-\" + theme} id=\"home\">\n        <Intro />\n        <ContactInfo />\n      </div>\n      <div className=\"section-header section-header-first\" id=\"projects\">\n        <h3 className=\"section-title\"><strong>Projects</strong></h3>\n      </div>\n      <div className={\"home-projects__container\"}>\n        <Projects />\n      </div>\n      <div className=\"section-header\"  id=\"about\">\n        <h3 className=\"section-title\"><strong>About</strong></h3>\n      </div>\n      <Skills />\n      {/*<Location />*/}\n      <div className=\"section-header\"  id=\"contact\">\n        <h3 className=\"section-title\"><strong>Contact</strong></h3>\n      </div>\n      <Contact />\n    </div>\n  )\n}\n\nexport default HomePage;\n","/Users/samuelwright/Projects/portfolio/src/Components/Nav/index.js",["167","168"],"import React, { useContext, useEffect, useState } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { DataContext } from '../../Context/DataContext';\nimport { ThemeContext } from '../../Context/ThemeContext';\nimport ThemeToggle from '../ThemeToggle';\nimport './style.css'\n\nexport default function MainNav(props) {\n  const { pageLocation, setPageLocation } = useContext(DataContext)\n  const { theme } = useContext(ThemeContext)\n\n  const [isNavExpanded, setIsNavExpanded] = useState(false);\n  const [scrollPosition, setScrollPosition] = useState(0);\n\n  const scrollTo = (id) => {\n    const section = document.getElementById(id);\n    section.scrollIntoView( { behavior: 'smooth', block: 'start' } );\n  };\n\n  const handleScroll = () => {\n      const position = window.pageYOffset;\n      setScrollPosition(position);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll, { passive: true });\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const navStyle = {\n    boxShadow: \n      theme === 'dark' && scrollPosition > 775 \n        ? '0px 0px 1px 1px rgba(255, 255, 255, 0.1)'\n        : ''\n  }\n\n  return (\n    <nav className={`navigation navigation-${theme}`} style={navStyle}>\n      <div className=\"main-nav\">\n        <div className='nav-location'>\n          <div className='nav-location__title'>\n            <span className='nav-location__title-red' style={{display: 'none'}}>{`${pageLocation}`}</span>\n            <span className='nav-location__title2'  style={{display: 'none'}}>{' // '}</span>\n            <span className='nav-location__title' onClick={()=>{\n              scrollTo('home');\n              setPageLocation('home');\n            }}>{'samuelwright.dev'}</span>\n          </div>\n        </div>\n        <button\n          className={`hamburger hamburger-${theme}`}\n          onClick={()=> {setIsNavExpanded(!isNavExpanded);}}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-5 w-5\"\n            viewBox=\"0 0 20 20\"\n            fill=\"white\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d={`\n                M3 5a1 \n                1 0 011-1h12a1 \n                1 0 110 2H4a1 \n                1 0 01-1-1z \n                \n                M3 10a1 \n                1 0 011-1h12a1 \n                1 0 110 2H4a1\n                1 0 01-1-1z  \n                \n                M3 15a1 \n                1 0 011-1h12a1 \n                1 0 110 2H4a1 \n                1 0 01-1-1z`}\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        </button>\n        <div className={ isNavExpanded ? \"navigation-menu expanded\" : \"navigation-menu\"}>\n          <ul>\n            <li className=\"main-nav__list-item-container\">\n              <div\n                className=\n                {\n                  pageLocation === 'home' \n                  ? `nav-link-highlighted main-nav__list-item` \n                  : `nav-link-normal main-nav__list-item main-nav__list-item-` + theme\n                }\n                onClick={() => {\n                  scrollTo('home');\n                  setPageLocation('home');\n                  setIsNavExpanded(!isNavExpanded);\n                }}\n              >\n                home\n              </div> \n            </li>\n            <li className=\"main-nav__list-item-container\">\n              <div\n                className=\n                {\n                  pageLocation === 'projects' \n                  ? `nav-link-highlighted main-nav__list-item` \n                  : `nav-link-normal main-nav__list-item main-nav__list-item-${theme}`\n                }\n                onClick={() => {\n                  setPageLocation('projects');\n                  scrollTo('projects');\n                  setIsNavExpanded(!isNavExpanded);\n                }}\n              >\n                projects\n              </div> \n            </li>\n            <li className=\"main-nav__list-item-container\">\n              <div\n                className=\n                {\n                  pageLocation === 'about' \n                  ? `nav-link-highlighted main-nav__list-item` \n                  : `nav-link-normal main-nav__list-item main-nav__list-item-${theme}`\n                } \n                onClick={() => {\n                  setPageLocation('about');\n                  scrollTo('about');\n                  setIsNavExpanded(!isNavExpanded);\n                }}\n              >\n                about\n              </div>\n            </li>\n            <li className=\"main-nav__list-item-container\" style={{display:'none',}}>\n              <div\n                className=\n                {\n                  pageLocation === 'skills' \n                  ? `nav-link-highlighted main-nav__list-item` \n                  : `nav-link-normal main-nav__list-item main-nav__list-item-${theme}`\n                } \n                onClick={() => {\n                  setPageLocation('skills');\n                  scrollTo('skills');\n                  setIsNavExpanded(!isNavExpanded);\n                }}\n              >\n                skills\n              </div>\n            </li>\n            <li className=\"main-nav__list-item-container\" style={{display:'none',}}>\n              <div\n                className=\n                {\n                  pageLocation === 'work' \n                  ? `nav-link-highlighted main-nav__list-item` \n                  : `nav-link-normal main-nav__list-item main-nav__list-item-${theme}`\n                }\n                onClick={() => {\n                  setPageLocation('work');\n                  scrollTo('work');\n                  setIsNavExpanded(!isNavExpanded);\n                }}\n              >\n                work\n              </div> \n            </li>\n            <li className=\"main-nav__list-item-container\">\n              <div\n                className=\n                {\n                  pageLocation === 'contact' \n                  ? `nav-link-highlighted main-nav__list-item` \n                  : `nav-link-normal main-nav__list-item main-nav__list-item-${theme}`\n                }\n                onClick={() => {\n                  setPageLocation('contact');\n                  scrollTo('contact');\n                  setIsNavExpanded(!isNavExpanded);\n                }}\n              >\n                contact\n              </div> \n            </li>     \n          </ul>\n        </div>\n      </div>\n      <ThemeToggle />\n    </nav>\n  );\n}\n\nfunction MainNavAlt(props) {\n    const {pageLocation, setPageLocation} = props\n\n    const { theme } = useContext(ThemeContext)\n\n    const [isNavExpanded, setIsNavExpanded] = useState(false);\n    \n    const scrollTo = (id) => {\n      const section = document.getElementById(id);\n      section.scrollIntoView( { behavior: 'smooth', block: 'start' } );\n    };\n\n    const navigateTo = () => {}\n\n    return (\n      <nav className=\"navigation\">\n        <Link to=\"/\" \n          className=\"main-nav__list-item brand-name\" \n          onClick={()=>{setPageLocation('home'); scrollTo('logo');}}\n          style={{display: 'none'}}>\n          {'logo'}\n        </Link> \n        <button\n          className=\"hamburger\"\n          onClick={()=> {\n            setPageLocation('home');\n            setIsNavExpanded(!isNavExpanded);\n          }}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-5 w-5\"\n            viewBox=\"0 0 20 20\"\n            fill=\"white\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d={`\n                M3 5a1 \n                1 0 011-1h12a1 \n                1 0 110 2H4a1 \n                1 0 01-1-1z \n                \n                M3 10a1 \n                1 0 011-1h12a1 \n                1 0 110 2H4a1\n                1 0 01-1-1z  \n                \n                M3 15a1 \n                1 0 011-1h12a1 \n                1 0 110 2H4a1 \n                1 0 01-1-1z`}\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        </button>\n        <div\n          className={\n            isNavExpanded ? \"navigation-menu expanded\" : \"navigation-menu\"\n          }\n        >\n          <ul>\n            <li className=\"main-nav__list-item-container\">\n              <Link to=\"/\"\n                className=\n                {\n                  pageLocation === 'home' \n                  ? `nav-link-highlighted main-nav__list-item` \n                  : `nav-link-normal main-nav__list-item main-nav__list-item-${theme}`\n                }\n                onClick={() => {\n                  setPageLocation('home');\n                  scrollTo('home');\n                  setIsNavExpanded(!isNavExpanded);\n                }}\n              >\n                home\n              </Link> \n            </li>\n            <li className=\"main-nav__list-item-container\">\n              <Link to=\"/projects\"\n                className=\n                {\n                  pageLocation === 'projects' \n                  ? `nav-link-highlighted main-nav__list-item` \n                  : `nav-link-normal main-nav__list-item main-nav__list-item-${theme}`\n                }\n                onClick={() => {\n                  setPageLocation('projects');\n                  scrollTo('projects');\n                  setIsNavExpanded(!isNavExpanded);\n                }}\n              >\n                projects\n              </Link> \n            </li>\n            <li className=\"main-nav__list-item-container\">\n              <Link to=\"/about\"\n                className=\n                {\n                  pageLocation === 'about' \n                  ? `nav-link-highlighted main-nav__list-item` \n                  : `nav-link-normal main-nav__list-item main-nav__list-item-${theme}`\n                } \n                onClick={() => {\n                  setPageLocation('about');\n                  scrollTo('about');\n                  setIsNavExpanded(!isNavExpanded);\n                }}\n              >\n                about\n              </Link>\n            </li>\n            <li className=\"main-nav__list-item-container\" style={{display:'none',}}>\n              <Link to=\"/skills\"\n                className=\n                {\n                  pageLocation === 'skills' \n                  ? `nav-link-highlighted main-nav__list-item` \n                  : `nav-link-normal main-nav__list-item main-nav__list-item-${theme}`\n                } \n                onClick={() => {\n                  setPageLocation('skills');\n                  scrollTo('skills');\n                  setIsNavExpanded(!isNavExpanded);\n                }}\n              >\n                skills\n              </Link>\n            </li>\n            <li className=\"main-nav__list-item-container\" style={{display:'none',}}>\n              <Link to=\"/work\"\n                className=\n                {\n                  pageLocation === 'work' \n                  ? `nav-link-highlighted main-nav__list-item` \n                  : `nav-link-normal main-nav__list-item main-nav__list-item-${theme}`\n                }\n                onClick={() => {\n                  setPageLocation('work');\n                  scrollTo('work');\n                  setIsNavExpanded(!isNavExpanded);\n                }}\n              >\n                work\n              </Link> \n            </li>\n            <li className=\"main-nav__list-item-container\">\n              <Link to=\"/contact\" \n                className=\n                {\n                  pageLocation === 'contact' \n                  ? `nav-link-highlighted main-nav__list-item` \n                  : `nav-link-normal main-nav__list-item main-nav__list-item-${theme}`\n                }\n                onClick={() => {\n                  setPageLocation('contact');\n                  scrollTo('contact');\n                  setIsNavExpanded(!isNavExpanded);\n                }}\n              >\n                contact\n              </Link> \n            </li>\n            \n                        \n          </ul>\n        </div>\n      </nav>\n    );\n  }\n  ","/Users/samuelwright/Projects/portfolio/src/App.js",["169","170","171","172","173"],"import React, { useContext } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { Footer, Nav } from './Components';\n\nimport './App.css';\nimport './App-theme.css';\nimport './App-mobile.css';\n\nimport { HomePage, ProjectsPage, AboutPage, WorkPage, ContactPage, SkillsPage } from './Pages';\nimport { DataContext } from './Context/DataContext';\nimport { ThemeContext } from './Context/ThemeContext';\n\nconst App = (props) => {\n  const { pageLocation, setPageLocation } = useContext(DataContext);\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <div id='app' className={`app-${theme}`}>\n      <div className='app-container'>\n        <Nav \n          pageLocation={pageLocation} \n          setPageLocation={setPageLocation}\n        />\n\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          {/*\n          <Route path=\"/projects\" element={<ProjectsPage />} />\n          <Route path=\"/about\" element={<AboutPage />} />\n          <Route path=\"/skills\" element={<SkillsPage />} />\n          <Route path=\"/work\" element={<WorkPage />} />\n          <Route path=\"/contact\" element={<ContactPage />} />\n          */}\n        </Routes>\n        \n        <Footer />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n\n\n","/Users/samuelwright/Projects/portfolio/src/Context/DataContext.js",[],"/Users/samuelwright/Projects/portfolio/src/Pages/Projects/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Pages/About/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Pages/Contact/index.js",["174"],"import React, { useContext } from 'react';\nimport githubPic from '../../Resources/Images/portfolio-github.png';\nimport emailPic from '../../Resources/Images/envelope-solid.png';\n\nimport './style-mobile.css';\nimport './style.css'\nimport { Contact } from '../../Components';\nimport { ThemeContext } from '../../Context/ThemeContext';\n\nconst ContactPage = (props) => {\n  const { theme } = useContext(ThemeContext)\n\n  return (\n    <div id='contact-container'>\n      <div className='section contact-section' id='contact'>\n        <div id=\"contact-header\">\n            <h3 id=\"contact-title\" className=\"section-title\"><strong>Contact</strong></h3>\n        </div>\n\n        <div style={{display: 'flex',}}>                \n            <div className=\"img-contact-link\">\n                <img className=\"\" alt=\"\" src={emailPic}\n                    style={{\n                        width: 20,\n                        marginRight: 8,\n                        marginBottom: 5,\n                    }}/>\n                <a className=\"portfolio-link\" \n                    href=\"mailto:wsright987@gmail.com\">wsright987@gmail.com</a>\n            </div>\n            <div className=\"img-contact-link\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\" style={{\n                    width: 20,\n                    marginRight: 8,\n                    marginBottom: 5,\n                }}><path d=\"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z\"/></svg>\n                <a className=\"portfolio-link\" \n                    href=\"https://www.linkedin.com/in/samuelwrightdev/\">Samuel Wright</a>\n            </div>\n            <div className=\"img-contact-link\">\n                <img className=\"\" alt=\"\" src={githubPic}\n                    style={{\n                        width: 20,\n                        marginRight: 8,\n                        marginBottom: 5,\n                    }}/>\n                <a className=\"portfolio-link\" \n                    href=\"http://www.github.com/sleighs\" target=\"blank\">github.com/sleighs</a>\n            </div>\n        </div>\n\n        <Contact />\n      </div>\n    </div>\n  )\n}\n\nexport default ContactPage;\n","/Users/samuelwright/Projects/portfolio/src/Pages/Work/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Context/ThemeContext.js",[],"/Users/samuelwright/Projects/portfolio/src/Pages/Skills/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Resources/Images/logos/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Intro/index.js",["175"],"import React, { useContext, useEffect, useRef } from 'react'\nimport { DataContext } from '../../Context/DataContext'\nimport { ThemeContext } from '../../Context/ThemeContext'\n\nimport './style.css'\n\nexport default function Intro() {\n  const { theme } = useContext(ThemeContext);\n  const { setPageLocation } = useContext(DataContext);\n\n  const hiddenRef = useRef();\n\n  useEffect(() => {\n      window.addEventListener('scroll', scrollHandler);\n      return () => window.removeEventListener('scroll', scrollHandler);\n  }, []);\n  \n  const scrollHandler = () => {\n      if(window.pageYOffset + window.innerHeight >= hiddenRef.current.offsetTop) {\n          setPageLocation('home')\n      }\n  }\n\n  return (\n    <div className={\"about-intro about-intro-\" + theme } ref={hiddenRef}>\n      <p className=\"about-intro__text\">Hi, I'm Samuel Wright, a <strong>full stack developer</strong> focused on creating <strong>beautiful</strong> and <strong>user friendly</strong> applications while writing <strong>clean code</strong>.</p>\n    </div>\n  )\n}\n","/Users/samuelwright/Projects/portfolio/src/Components/ContactInfo/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/ThemeToggle/index.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"176","replacedBy":"180"},{"ruleId":"178","replacedBy":"181"},{"ruleId":"176","replacedBy":"182"},{"ruleId":"178","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":17},{"ruleId":"184","severity":1,"message":"188","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":16},{"ruleId":"184","severity":1,"message":"189","line":6,"column":8,"nodeType":"186","messageId":"187","endLine":6,"endColumn":17},{"ruleId":"184","severity":1,"message":"190","line":7,"column":8,"nodeType":"186","messageId":"187","endLine":7,"endColumn":18},{"ruleId":"184","severity":1,"message":"191","line":8,"column":8,"nodeType":"186","messageId":"187","endLine":8,"endColumn":18},{"ruleId":"184","severity":1,"message":"192","line":22,"column":13,"nodeType":"186","messageId":"187","endLine":22,"endColumn":18},{"ruleId":"193","severity":1,"message":"194","line":29,"column":8,"nodeType":"195","endLine":29,"endColumn":10,"suggestions":"196"},{"ruleId":"184","severity":1,"message":"197","line":119,"column":9,"nodeType":"186","messageId":"187","endLine":119,"endColumn":25},{"ruleId":"184","severity":1,"message":"198","line":124,"column":9,"nodeType":"186","messageId":"187","endLine":124,"endColumn":26},{"ruleId":"184","severity":1,"message":"199","line":129,"column":9,"nodeType":"186","messageId":"187","endLine":129,"endColumn":24},{"ruleId":"184","severity":1,"message":"200","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":26},{"ruleId":"193","severity":1,"message":"194","line":21,"column":8,"nodeType":"195","endLine":21,"endColumn":10,"suggestions":"201"},{"ruleId":"184","severity":1,"message":"202","line":12,"column":26,"nodeType":"186","messageId":"187","endLine":12,"endColumn":43},{"ruleId":"184","severity":1,"message":"203","line":21,"column":25,"nodeType":"186","messageId":"187","endLine":21,"endColumn":41},{"ruleId":"184","severity":1,"message":"204","line":27,"column":23,"nodeType":"186","messageId":"187","endLine":27,"endColumn":37},{"ruleId":"193","severity":1,"message":"194","line":38,"column":6,"nodeType":"195","endLine":38,"endColumn":8,"suggestions":"205"},{"ruleId":"184","severity":1,"message":"206","line":7,"column":3,"nodeType":"186","messageId":"187","endLine":7,"endColumn":11},{"ruleId":"184","severity":1,"message":"207","line":8,"column":3,"nodeType":"186","messageId":"187","endLine":8,"endColumn":10},{"ruleId":"184","severity":1,"message":"208","line":9,"column":3,"nodeType":"186","messageId":"187","endLine":9,"endColumn":9},{"ruleId":"184","severity":1,"message":"209","line":98,"column":7,"nodeType":"186","messageId":"187","endLine":98,"endColumn":13},{"ruleId":"184","severity":1,"message":"210","line":113,"column":7,"nodeType":"186","messageId":"187","endLine":113,"endColumn":15},{"ruleId":"184","severity":1,"message":"206","line":2,"column":32,"nodeType":"186","messageId":"187","endLine":2,"endColumn":40},{"ruleId":"184","severity":1,"message":"211","line":196,"column":10,"nodeType":"186","messageId":"187","endLine":196,"endColumn":20},{"ruleId":"184","severity":1,"message":"212","line":208,"column":11,"nodeType":"186","messageId":"187","endLine":208,"endColumn":21},{"ruleId":"184","severity":1,"message":"213","line":9,"column":20,"nodeType":"186","messageId":"187","endLine":9,"endColumn":32},{"ruleId":"184","severity":1,"message":"214","line":9,"column":34,"nodeType":"186","messageId":"187","endLine":9,"endColumn":43},{"ruleId":"184","severity":1,"message":"215","line":9,"column":45,"nodeType":"186","messageId":"187","endLine":9,"endColumn":53},{"ruleId":"184","severity":1,"message":"216","line":9,"column":55,"nodeType":"186","messageId":"187","endLine":9,"endColumn":66},{"ruleId":"184","severity":1,"message":"217","line":9,"column":68,"nodeType":"186","messageId":"187","endLine":9,"endColumn":78},{"ruleId":"184","severity":1,"message":"192","line":11,"column":11,"nodeType":"186","messageId":"187","endLine":11,"endColumn":16},{"ruleId":"193","severity":1,"message":"194","line":16,"column":6,"nodeType":"195","endLine":16,"endColumn":8,"suggestions":"218"},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],["219"],["220"],["219"],["220"],"no-unused-vars","'githubPic' is defined but never used.","Identifier","unusedVar","'emailPic' is defined but never used.","'mobilePic' is defined but never used.","'mobile2Pic' is defined but never used.","'mobile3Pic' is defined but never used.","'theme' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'scrollHandler'. Either include it or remove the dependency array.","ArrayExpression",["221"],"'contactInfoStyle' is assigned a value but never used.","'contactInfoStyle2' is assigned a value but never used.","'formOptionStyle' is assigned a value but never used.","'Component' is defined but never used.",["222"],"'setFrontEndSkills' is assigned a value but never used.","'setBackEndSkills' is assigned a value but never used.","'setOtherSkills' is assigned a value but never used.",["223"],"'Location' is defined but never used.","'Contact' is defined but never used.","'Footer' is defined but never used.","'Github' is defined but never used.","'DarkMode' is assigned a value but never used.","'MainNavAlt' is defined but never used.","'navigateTo' is assigned a value but never used.","'ProjectsPage' is defined but never used.","'AboutPage' is defined but never used.","'WorkPage' is defined but never used.","'ContactPage' is defined but never used.","'SkillsPage' is defined but never used.",["224"],"no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"225","fix":"227"},{"desc":"225","fix":"228"},{"desc":"225","fix":"229"},"Update the dependencies array to be: [scrollHandler]",{"range":"230","text":"231"},{"range":"232","text":"231"},{"range":"233","text":"231"},{"range":"234","text":"231"},[1063,1065],"[scrollHandler]",[797,799],[873,875],[518,520]]