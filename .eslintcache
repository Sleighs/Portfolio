[{"/Users/samuelwright/Projects/portfolio/src/index.js":"1","/Users/samuelwright/Projects/portfolio/src/reportWebVitals.js":"2","/Users/samuelwright/Projects/portfolio/src/AppManager.js":"3","/Users/samuelwright/Projects/portfolio/src/firebase.js":"4","/Users/samuelwright/Projects/portfolio/src/Resources/mapsKey.js":"5","/Users/samuelwright/Projects/portfolio/src/Resources/firebaseKey.js":"6","/Users/samuelwright/Projects/portfolio/src/Components/index.js":"7","/Users/samuelwright/Projects/portfolio/src/Components/Footer/index.js":"8","/Users/samuelwright/Projects/portfolio/src/Components/Contact/index.js":"9","/Users/samuelwright/Projects/portfolio/src/Components/Header/index.js":"10","/Users/samuelwright/Projects/portfolio/src/Components/Location/index.js":"11","/Users/samuelwright/Projects/portfolio/src/Components/Map/index.js":"12","/Users/samuelwright/Projects/portfolio/src/Components/Projects/index.js":"13","/Users/samuelwright/Projects/portfolio/src/Components/Skills/index.js":"14","/Users/samuelwright/Projects/portfolio/src/Components/Tag/index.js":"15","/Users/samuelwright/Projects/portfolio/src/Pages/index.js":"16","/Users/samuelwright/Projects/portfolio/src/Pages/Resume/index.js":"17","/Users/samuelwright/Projects/portfolio/src/Pages/Home/index.js":"18"},{"size":493,"mtime":1668976765086,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1610654342212,"results":"21","hashOfConfig":"22"},{"size":131,"mtime":1611319188045,"results":"23","hashOfConfig":"20"},{"size":559,"mtime":1624360673141,"results":"24","hashOfConfig":"20"},{"size":80,"mtime":1641801299060,"results":"25","hashOfConfig":"20"},{"size":89,"mtime":1641441009397,"results":"26","hashOfConfig":"20"},{"size":365,"mtime":1668976765080,"results":"27","hashOfConfig":"20"},{"size":405,"mtime":1665905787809,"results":"28","hashOfConfig":"20"},{"size":8696,"mtime":1668976765074,"results":"29","hashOfConfig":"20"},{"size":7830,"mtime":1653334335483,"results":"30","hashOfConfig":"20"},{"size":406,"mtime":1645470690659,"results":"31","hashOfConfig":"20"},{"size":2230,"mtime":1645470766349,"results":"32","hashOfConfig":"20"},{"size":6487,"mtime":1668976765078,"results":"33","hashOfConfig":"20"},{"size":1989,"mtime":1668976765080,"results":"34","hashOfConfig":"20"},{"size":660,"mtime":1649739250008,"results":"35","hashOfConfig":"20"},{"size":87,"mtime":1668976765083,"results":"36","hashOfConfig":"20"},{"size":2945,"mtime":1653336177841,"results":"37","hashOfConfig":"20"},{"size":1216,"mtime":1668976765081,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nwhp2",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10l9jrj",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"45"},"/Users/samuelwright/Projects/portfolio/src/index.js",[],"/Users/samuelwright/Projects/portfolio/src/reportWebVitals.js",[],"/Users/samuelwright/Projects/portfolio/src/AppManager.js",[],["79","80"],"/Users/samuelwright/Projects/portfolio/src/firebase.js",[],"/Users/samuelwright/Projects/portfolio/src/Resources/mapsKey.js",[],"/Users/samuelwright/Projects/portfolio/src/Resources/firebaseKey.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Footer/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Contact/index.js",["81","82"],"import React, { Component } from 'react';\nimport githubPic from '../../Resources/Images/portfolio-github.png';\nimport emailPic from '../../Resources/Images/envelope-solid.png';\n\nimport { db } from '../../firebase';\nimport './style.css'\n\nclass Contact extends Component {\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            name: '',\n            email: '',\n            message: '',\n            dataSent: ''\n       }\n       this.handleSubmit = this.handleSubmit.bind(this);\n       this.resetSend = this.resetSend.bind(this)\n    }\n\n    makeid(length) {\n        var result = \"\";\n        var characters =\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        var charactersLength = 10;\n        for (var i = 0; i < length; i++) {\n          result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    handleSubmit(event) {\n        // Make a unique name for the message\n        var d = new Date();\n        var msgName = String(this.state.name + '-' + d.getTime());\n\n        // Get date of message\n        var date = String( d.getMonth() + 1) + '-' + String( d.getDate()) + '-' + String(d.getFullYear())\n\n        // Get time of message\n        var minutes = ()=>{\n            var a;\n            if (d.getMinutes() < 10) {\n                a = String('0' + d.getUTCMinutes());\n            } else {\n                a = String(d.getUTCMinutes());\n            }\n\n            return a;\n        }\n\n        var time = String(d.getHours()) + ':' + minutes() + '.' + String(d.getSeconds());\n        \n        // Make new id\n        var id = this.makeid(10);\n\n        // Add message to database\n        db.collection(\"messages\").doc(msgName).set({\n            name: this.state.name,\n            email: this.state.email,\n            message: this.state.message,\n            date: date,\n            time: time,\n            timezone: d.getTimezoneOffset(),\n            id: id\n        })\n        .then(() => {\n            console.log(\"Great news! Message sent successfully!\");\n            /*console.log({\n                name: this.state.name,\n                email: this.state.email,\n                message: this.state.message,\n                date: date,\n                time: time,\n                timezone: d.getTimezoneOffset(),\n                id: id\n            })*/\n        })\n        .catch((error) => {\n            console.error(\"Krikey! Error sending message: \", error);\n        });\n\n        // For component to show message was sent\n        if (!this.state.datasent){\n            this.setState({dataSent: true});\n        } \n    }\n\n    resetSend() {\n        this.setState({dataSent: false});\n    }\n    \n    render (){\n        let contactInfoStyle = {\n            textAlign: 'center',\n            marginTop: 15,\n            width: '100%',\n        }\n        let contactInfoStyle2 = {\n            textAlign: 'center',\n            fontSize: '.8em',\n            color: 'rgb(1,1,1,.25)',\n        }\n        let formOptionStyle = {\n            textAlign: 'center'\n        }\n        let contactFormStyle = {\n            maxWidth: 450,\n            margin: 'auto',\n            padding: '0 3%',\n        }\n        let contactFormBtn = {\n            margin: 'auto',\n            display: 'block',\n            padding: '5px 25px',\n            outline: 'none',\n            background: 'rgba(0, 187, 16, .5)',\n            border: '1pt solid white',\n            color: 'white',\n            fontSize: '1.2em',\n            borderRadius: '25px',\n        }\n        let contactFormBtn2 = {\n            margin: 'auto',\n            display: 'block',\n            padding: '5px 25px',\n            outline: 'none',\n            background: 'lightgray',\n            border: '1pt solid white',\n            color: 'white',\n            fontSize: '1.2em',\n            borderRadius: '25px',\n        }\n        \n        return (\n            <div className={\"container\"} id=\"contact-container\">\n                <div id=\"contact-header\" style={{display:'none'}}>\n                    <h3 id=\"contact-title\"><strong>CONTACT</strong></h3>\n                </div>\n                <div style={{display: 'flex',}}>                \n                    <div className=\"img-contact-link\">\n                        <img className=\"\" alt=\"\" src={emailPic}\n                            style={{\n                                width: 20,\n                                marginRight: 8,\n                                marginBottom: 5,\n                            }}/>\n                        <a className=\"portfolio-link\" \n                            href=\"mailto:wsright987@gmail.com\">wsright987@gmail.com</a>\n                    </div>\n                    <div className=\"img-contact-link\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\" style={{\n                            width: 20,\n                            marginRight: 8,\n                            marginBottom: 5,\n                        }}><path d=\"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z\"/></svg>\n                        <a className=\"portfolio-link\" \n                            href=\"https://www.linkedin.com/in/samuelwrightdev/\">Samuel Wright</a>\n                    </div>\n                    <div className=\"img-contact-link\">\n                        <img className=\"\" alt=\"\" src={githubPic}\n                            style={{\n                                width: 20,\n                                marginRight: 8,\n                                marginBottom: 5,\n                            }}/>\n                        <a className=\"portfolio-link\" \n                            href=\"http://www.github.com/sleighs\" target=\"blank\">github.com/sleighs</a>\n                    </div>\n\n                </div>\n\n                <div>\n                    <p style={{\n                        textAlign: 'center',\n                        display: 'none',\n                    }}>\n                        Schedule an appointment \n                        <a style={{\n                        \n                        }} href=\"https://calendly.com/sleighs\" target=\"blank\">here</a>\n                    </p>\n                </div>\n\n                {this.state.dataSent ?\n                <div className=\"msg\"style={{ textAlign: 'center' }}>\n                    <br/>\n                    <p style={{ fontSize: '1.2em' }}>Great news! Message sent successfully!</p>\n                    <button className=\"new-message-btn\" style={contactFormBtn2} onClick={(e)=>{this.resetSend()}}>New Message</button>\n                </div> :\n                <form style={contactFormStyle} >\n                    <div style={formOptionStyle}>\n                        <p>Or use this contact form below:</p>\n                    </div>\n                    <div className=\"form-group\"> \n                        <label name=\"inputName\">Your Name</label>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"name-input\" \n                            name=\"name\" value={this.state.name}  \n                            onChange={(e)=>{this.setState({ name: e.target.value })}}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label name=\"inputEmail\">Your Email</label>\n                        <input type=\"email\" \n                            className=\"form-control\" \n                            id=\"email-input\" \n                            aria-describedby=\"emailHelp\" \n                            value={this.state.email} \n                            onChange={(e)=>{this.setState({ email: e.target.value })}}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label name=\"inputMessage\" className=\"form-text\">Your Message </label>\n                        <textarea type=\"text\" \n                            className=\"form-control\" \n                            id=\"message-input\" \n                            name=\"text-area\" \n                            value={this.state.message} \n                            onChange={(e)=>{this.setState({ message: e.target.value })}}\n                        />\n                    </div>\n                    <input type=\"submit\" className={\"input for-control submit\"} style={contactFormBtn} value=\"Send\" onClick={(e)=>{this.handleSubmit(e)}}/>\n                    </form>}\n            </div>\n        )\n    }\n}\n\nexport default Contact;","/Users/samuelwright/Projects/portfolio/src/Components/Header/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Location/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Map/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Projects/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Skills/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Tag/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Pages/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Pages/Resume/index.js",["83","84","85","86","87"],"import React, { Component, useState } from 'react';\nimport Cookies from 'universal-cookie'\nimport { \n  Header,\n  Skills,\n  Projects,\n  Location,\n  Contact,\n  Footer\n} from '../../Components';\nimport '../../App.css';\n\nconst cookiesDarkMode = new Cookies()\nconst darkModeCookies = cookiesDarkMode.get('darkModeData')\n\nclass Resume extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      textColor: 'black',\n      backgroundColor: 'white',\n      darkMode: false,\n    }\n\n    this.toggleDarkMode = this.toggleDarkMode.bind(this);\n  }\n\n  componentDidMount(){\n    if (darkModeCookies === true){\n      this.setState({\n        textColor: 'white',\n        backgroundColor: 'black',\n        darkMode: true,\n      })\n    }\n  }\n\n  toggleDarkMode(){\n    if (!this.state.darkMode){\n      this.setState({\n        textColor: 'white',\n        backgroundColor: 'black',\n        darkMode: true,\n      })\n      cookiesDarkMode.set(\n        'darkModeData', \n        true, \n        {path:'/', maxAge: 1200,}\n      )\n    } else {\n      this.setState({\n        textColor: 'black',\n        backgroundColor: 'white',\n        darkMode: false,\n      })\n      cookiesDarkMode.set(\n        'darkModeData', \n        false, \n        {path:'/', maxAge: 1200,}\n      )\n    }\n    \n  }\n\n  render() {\n    let portfolioStyle = {\n      fontSize: '1.2em',\n    }\n\n    return (\n      <div \n        style={{\n          height: '100%',\n          maxWidth: '871px',\n          margin: 'auto',\n          color: this.state.textColor,\n          backgroundColor: this.state.backgroundColor,\n        }}\n      > \n        <div \n          id=\"portfolio\" \n          className={\"container-md\"} \n          style={portfolioStyle}\n        >\n          <Header resumePage={true}/>\n          <Skills resumePage={true}/>\n          <hr/>\n          <br/>\n          <Projects resumePage={true}/>\n          <br/>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nclass Github extends Component {\n  render() {\n    return(\n      <div id=\"github-container\" >\n        <h3 className=\"title\"><strong>DO I HAVE A GITHUB?</strong></h3>\n        <p id=\"github-text\" style={{\n            fontSize: 28,\n        }}>Yes.</p>\n        <p className='github-text'><a  href=\"http://www.github.com/sleighs\" target=\"blank\">github.com/sleighs</a></p>\n      </div>\n    )\n  }\n  \n}\n\nconst DarkMode = (props) => {\n  const { \n    modeState,\n    toggle\n  } = props\n\n  const [darkModeState, getDarkModeState] = useState(modeState)\n\n  return(\n    <div id=\"dark-mode-container\" \n      style={{\n        display: 'none',\n        position: 'absolute',\n      }}>\n      <button onClick={()=>{\n        if (darkModeState === true){\n          toggle()\n          getDarkModeState(false)\n        } else {\n          toggle()\n          getDarkModeState(true)\n        }\n\n        console.log('darkMode ', modeState )\n      }}>\n        {modeState === true ? 'Dark On' : 'Light On'}\n      </button>\n    </div>\n  )\n}\n\nexport default Resume;\n","/Users/samuelwright/Projects/portfolio/src/Pages/Home/index.js",["88","89","90","91","92","93","94"],"import React, { Component } from 'react';\nimport Cookies from 'universal-cookie'\nimport { \n  Header,\n  Skills,\n  Projects,\n  Location,\n  Contact,\n  Footer\n} from '../../Components';\nimport '../../App.css';\n\nconst cookiesDarkMode = new Cookies()\nconst darkModeCookies = cookiesDarkMode.get('darkModeData')\n\nclass Home extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      textColor: 'black',\n      backgroundColor: 'white',\n      darkMode: false,\n    }\n  }\n\n\n  render() {\n    let portfolioStyle = {\n      fontSize: '1.2em',\n    }\n\n    return (\n      <div \n        style={{\n          height: '100%',\n          maxWidth: '871px',\n          margin: 'auto',\n          color: this.state.textColor,\n          backgroundColor: this.state.backgroundColor,\n        }}\n      > \n        <div \n          id=\"portfolio\" \n          className={\"container-md\"} \n          style={portfolioStyle}\n        >\n          <Header  resumePage={false}/>\n          <Contact />\n          <Skills />\n          <hr/>\n          <Projects />\n          {/*\n          <hr/>\n          <Location />\n          */}\n          <hr/>\n          <Footer />\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Home;\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":95,"column":13,"nodeType":"101","messageId":"102","endLine":95,"endColumn":29},{"ruleId":"99","severity":1,"message":"103","line":100,"column":13,"nodeType":"101","messageId":"102","endLine":100,"endColumn":30},{"ruleId":"99","severity":1,"message":"104","line":7,"column":3,"nodeType":"101","messageId":"102","endLine":7,"endColumn":11},{"ruleId":"99","severity":1,"message":"105","line":8,"column":3,"nodeType":"101","messageId":"102","endLine":8,"endColumn":10},{"ruleId":"99","severity":1,"message":"106","line":9,"column":3,"nodeType":"101","messageId":"102","endLine":9,"endColumn":9},{"ruleId":"99","severity":1,"message":"107","line":98,"column":7,"nodeType":"101","messageId":"102","endLine":98,"endColumn":13},{"ruleId":"99","severity":1,"message":"108","line":113,"column":7,"nodeType":"101","messageId":"102","endLine":113,"endColumn":15},{"ruleId":"99","severity":1,"message":"109","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"110","line":1,"column":40,"nodeType":"101","messageId":"102","endLine":1,"endColumn":48},{"ruleId":"99","severity":1,"message":"111","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":16},{"ruleId":"99","severity":1,"message":"112","line":2,"column":18,"nodeType":"101","messageId":"102","endLine":2,"endColumn":23},{"ruleId":"99","severity":1,"message":"113","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":15},{"ruleId":"99","severity":1,"message":"114","line":10,"column":10,"nodeType":"101","messageId":"102","endLine":10,"endColumn":22},{"ruleId":"99","severity":1,"message":"115","line":10,"column":24,"nodeType":"101","messageId":"102","endLine":10,"endColumn":39},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'contactInfoStyle' is assigned a value but never used.","Identifier","unusedVar","'contactInfoStyle2' is assigned a value but never used.","'Location' is defined but never used.","'Contact' is defined but never used.","'Footer' is defined but never used.","'Github' is defined but never used.","'DarkMode' is assigned a value but never used.","'Component' is defined but never used.","'useState' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'Cookies' is defined but never used.","'pageLocation' is assigned a value but never used.","'setPageLocation' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]