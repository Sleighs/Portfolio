[{"/Users/samuelwright/Projects/portfolio/src/index.js":"1","/Users/samuelwright/Projects/portfolio/src/reportWebVitals.js":"2","/Users/samuelwright/Projects/portfolio/src/Components/Header.js":"3","/Users/samuelwright/Projects/portfolio/src/AppManager.js":"4","/Users/samuelwright/Projects/portfolio/src/Components/Skills.js":"5","/Users/samuelwright/Projects/portfolio/src/Components/Map.js":"6","/Users/samuelwright/Projects/portfolio/src/Components/Projects.js":"7","/Users/samuelwright/Projects/portfolio/src/Components/Contact.js":"8","/Users/samuelwright/Projects/portfolio/src/Portfolio.js":"9","/Users/samuelwright/Projects/portfolio/src/Components/Location.js":"10","/Users/samuelwright/Projects/portfolio/src/Components/Footer.js":"11","/Users/samuelwright/Projects/portfolio/src/Resources/config.js":"12"},{"size":815,"mtime":1611100645293,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1610654342212,"results":"15","hashOfConfig":"14"},{"size":5658,"mtime":1611382992576,"results":"16","hashOfConfig":"14"},{"size":131,"mtime":1611319188045,"results":"17","hashOfConfig":"14"},{"size":1621,"mtime":1611652117618,"results":"18","hashOfConfig":"14"},{"size":2218,"mtime":1611322025035,"results":"19","hashOfConfig":"14"},{"size":2673,"mtime":1611878587700,"results":"20","hashOfConfig":"14"},{"size":4787,"mtime":1611880670427,"results":"21","hashOfConfig":"14"},{"size":1271,"mtime":1611521752408,"results":"22","hashOfConfig":"14"},{"size":420,"mtime":1611226796257,"results":"23","hashOfConfig":"14"},{"size":450,"mtime":1611303270508,"results":"24","hashOfConfig":"14"},{"size":210,"mtime":1611652784961,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"10l9jrj",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/samuelwright/Projects/portfolio/src/index.js",[],["53","54"],"/Users/samuelwright/Projects/portfolio/src/reportWebVitals.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Header.js",[],"/Users/samuelwright/Projects/portfolio/src/AppManager.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Skills.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Map.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Projects.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Contact.js",["55","56","57","58"],"import React, { Component } from 'react';\nimport config from '../Resources/config';\nimport axios from 'axios';\n\nimport Firebase from 'firebase';\nimport '../App.css';\nconst API_PATH = 'http://192.168.1.18:3000/portfolio/src/api/message.php';\n\nclass Contact extends Component {\n    constructor(props){\n        super(props);\n        \n        //Firebase.initializeApp(config.firebase);\n        this.state = {\n            name: '',\n            email: '',\n            message: '',\n            dataSent: ''\n       }\n       this.handleSubmit = this.handleSubmit.bind(this);\n       this.resetSend = this.resetSend.bind(this)\n    }\n    componentDidMount() {\n        //console.log(Firebase)\n    }\n\n    handleSubmit(event) {\n        /*axios({\n            method: 'post',\n            url: API_PATH,\n            headers: {\n                'content-type': 'application/json'\n            },\n            data: this.state\n        })\n        .then(result => {\n            console.log('axios results', result.data)\n            this.setState({\n                dataSent: result.data.sent,\n            })\n            //console.log(this.state)\n        })\n        .catch(error => this.setState({\n            error: error.message\n        }));\n\n        event.preventDefault();*/\n        console.log(this.state);\n\n        if (!this.state.datasent){\n            this.setState({dataSent: true});\n        } \n\n    }\n    resetSend() {\n        this.setState({dataSent: false});\n    }\n    \n    render (){\n        let contactInfoStyle = {\n            textAlign: 'center',\n            fontSize: '1.2em'\n        }\n        let formOptionStyle = {\n            textAlign: 'center'\n        }\n        let contactFormStyle = {\n            maxWidth: 450,\n            margin: 'auto',\n            padding: '0 3%'\n        }\n        let contactFormBtn = {\n            margin: 'auto',\n            display: 'block',\n            padding: '5px 25px',\n            outline: 'none',\n            background: 'rgba(0, 187, 16, .5)',\n            border: '1pt solid white',\n            color: 'white',\n            fontSize: '1.2em',\n            borderRadius: '25px'\n        }\n        let contactFormBtn2 = {\n            margin: 'auto',\n            display: 'block',\n            padding: '5px 25px',\n            outline: 'none',\n            background: 'lightgray',\n            border: '1pt solid white',\n            color: 'white',\n            fontSize: '1.2em',\n            borderRadius: '25px'\n        }\n        \n        return (\n            <div className={\"container\"} id=\"contact-container\">\n                <div id=\"contact-header\">\n                    <h3 id=\"contact-title\"><strong>HOW CAN YOU REACH ME?</strong></h3>\n                </div>\n                <div style={contactInfoStyle}>\n                    <a href=\"mailto:wsright987@gmail.com\">WSRIGHT987@GMAIL.COM</a>\n                    <br/>\n                    <strong>609-472-2897</strong>\n                </div>\n                    \n                {this.state.dataSent ?\n                <div className=\"msg\">\n                    <br/>\n                    <h2>MESSAGE SENT</h2>\n                    <br/>\n                    <p>Thanks for your time.</p>\n                    <button className=\"new-message-btn\" style={contactFormBtn2} onClick={(e)=>{this.resetSend()}}>New Message</button>\n                </div> :\n                <form style={contactFormStyle} >\n                    <div style={formOptionStyle}>\n                        <p>Or use this contact form below:</p>\n                    </div>\n                    <div className=\"form-group\"> \n                        <label name=\"inputName\">Your Name</label>\n                        <input type=\"text\" className=\"form-control\" id=\"name-input\" name=\"name\" value={this.state.name}  onChange={(e)=>{this.setState({ name: e.target.value })}}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label name=\"inputEmail\">Your Email</label>\n                        <input type=\"email\" className=\"form-control\" id=\"email-input\" aria-describedby=\"emailHelp\" value={this.state.email} onChange={(e)=>{this.setState({ email: e.target.value })}}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label name=\"inputMessage\" className=\"form-text\">Your Message </label>\n                        <textarea type=\"text\" className=\"form-control\" id=\"message-input\" name=\"text-area\" value={this.state.message} onChange={(e)=>{this.setState({ message: e.target.value })}}/>\n                    </div>\n                    <input type=\"submit\" className={\"input for-control submit\"} style={contactFormBtn} value=\"Send\" onClick={(e)=>{this.handleSubmit(e)}}/>\n                </form>}\n            </div>\n        )\n    }\n}\n\nexport default Contact;","/Users/samuelwright/Projects/portfolio/src/Portfolio.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Location.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Footer.js",[],"/Users/samuelwright/Projects/portfolio/src/Resources/config.js",[],["59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":14},{"ruleId":"65","severity":1,"message":"69","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":13},{"ruleId":"65","severity":1,"message":"70","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":16},{"ruleId":"65","severity":1,"message":"71","line":7,"column":7,"nodeType":"67","messageId":"68","endLine":7,"endColumn":15},{"ruleId":"61","replacedBy":"72"},{"ruleId":"63","replacedBy":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Firebase' is defined but never used.","'API_PATH' is assigned a value but never used.",["74"],["75"],"no-global-assign","no-unsafe-negation"]