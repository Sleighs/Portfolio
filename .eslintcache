[{"/Users/samuelwright/Projects/portfolio/src/index.js":"1","/Users/samuelwright/Projects/portfolio/src/reportWebVitals.js":"2","/Users/samuelwright/Projects/portfolio/src/AppManager.js":"3","/Users/samuelwright/Projects/portfolio/src/Portfolio.js":"4","/Users/samuelwright/Projects/portfolio/src/firebase.js":"5","/Users/samuelwright/Projects/portfolio/src/Resources/mapsKey.js":"6","/Users/samuelwright/Projects/portfolio/src/Resources/firebaseKey.js":"7","/Users/samuelwright/Projects/portfolio/src/Components/index.js":"8","/Users/samuelwright/Projects/portfolio/src/Components/Footer/index.js":"9","/Users/samuelwright/Projects/portfolio/src/Components/Contact/index.js":"10","/Users/samuelwright/Projects/portfolio/src/Components/Header/index.js":"11","/Users/samuelwright/Projects/portfolio/src/Components/Location/index.js":"12","/Users/samuelwright/Projects/portfolio/src/Components/Map/index.js":"13","/Users/samuelwright/Projects/portfolio/src/Components/Projects/index.js":"14","/Users/samuelwright/Projects/portfolio/src/Components/Skills/index.js":"15","/Users/samuelwright/Projects/portfolio/src/Components/Tag/index.js":"16","/Users/samuelwright/Projects/portfolio/src/Pages/index.js":"17","/Users/samuelwright/Projects/portfolio/src/Pages/Resume/index.js":"18","/Users/samuelwright/Projects/portfolio/src/Pages/Home/index.js":"19"},{"size":533,"mtime":1653241847936,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1610654342212,"results":"22","hashOfConfig":"23"},{"size":131,"mtime":1611319188045,"results":"24","hashOfConfig":"21"},{"size":2969,"mtime":1653151009127,"results":"25","hashOfConfig":"21"},{"size":559,"mtime":1624360673141,"results":"26","hashOfConfig":"21"},{"size":80,"mtime":1641801299060,"results":"27","hashOfConfig":"21"},{"size":89,"mtime":1641441009397,"results":"28","hashOfConfig":"21"},{"size":365,"mtime":1645470836651,"results":"29","hashOfConfig":"21"},{"size":449,"mtime":1645470886785,"results":"30","hashOfConfig":"21"},{"size":7014,"mtime":1646969325106,"results":"31","hashOfConfig":"21"},{"size":6773,"mtime":1653243903091,"results":"32","hashOfConfig":"21"},{"size":406,"mtime":1645470690659,"results":"33","hashOfConfig":"21"},{"size":2230,"mtime":1645470766349,"results":"34","hashOfConfig":"21"},{"size":5298,"mtime":1653144254875,"results":"35","hashOfConfig":"21"},{"size":1737,"mtime":1653151164658,"results":"36","hashOfConfig":"21"},{"size":660,"mtime":1649739250008,"results":"37","hashOfConfig":"21"},{"size":87,"mtime":1653241379651,"results":"38","hashOfConfig":"21"},{"size":2941,"mtime":1653242468594,"results":"39","hashOfConfig":"21"},{"size":2986,"mtime":1653243733287,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"nwhp2",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10l9jrj",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/samuelwright/Projects/portfolio/src/index.js",["82"],"/Users/samuelwright/Projects/portfolio/src/reportWebVitals.js",[],"/Users/samuelwright/Projects/portfolio/src/AppManager.js",[],["83","84"],"/Users/samuelwright/Projects/portfolio/src/Portfolio.js",[],"/Users/samuelwright/Projects/portfolio/src/firebase.js",[],"/Users/samuelwright/Projects/portfolio/src/Resources/mapsKey.js",[],"/Users/samuelwright/Projects/portfolio/src/Resources/firebaseKey.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Footer/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Contact/index.js",["85"],"import React, { Component } from 'react';\n\nimport { db } from '../../firebase';\n\nclass Contact extends Component {\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            name: '',\n            email: '',\n            message: '',\n            dataSent: ''\n       }\n       this.handleSubmit = this.handleSubmit.bind(this);\n       this.resetSend = this.resetSend.bind(this)\n    }\n\n    makeid(length) {\n        var result = \"\";\n        var characters =\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        var charactersLength = 10;\n        for (var i = 0; i < length; i++) {\n          result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    handleSubmit(event) {\n        // Make a unique name for the message\n        var d = new Date();\n        var msgName = String(this.state.name + '-' + d.getTime());\n\n        // Get date of message\n        var date = String( d.getMonth() + 1) + '-' + String( d.getDate()) + '-' + String(d.getFullYear())\n\n        // Get time of message\n        var minutes = ()=>{\n            var a;\n            if (d.getMinutes() < 10) {\n                a = String('0' + d.getUTCMinutes());\n            } else {\n                a = String(d.getUTCMinutes());\n            }\n\n            return a;\n        }\n\n        var time = String(d.getHours()) + ':' + minutes() + '.' + String(d.getSeconds());\n        \n        // Make new id\n        var id = this.makeid(10);\n\n        // Add message to database\n        db.collection(\"messages\").doc(msgName).set({\n            name: this.state.name,\n            email: this.state.email,\n            message: this.state.message,\n            date: date,\n            time: time,\n            timezone: d.getTimezoneOffset(),\n            id: id\n        })\n        .then(() => {\n            console.log(\"Great news! Message sent successfully!\");\n            /*console.log({\n                name: this.state.name,\n                email: this.state.email,\n                message: this.state.message,\n                date: date,\n                time: time,\n                timezone: d.getTimezoneOffset(),\n                id: id\n            })*/\n        })\n        .catch((error) => {\n            console.error(\"Krikey! Error sending message: \", error);\n        });\n\n        // Email message to inbox\n        /*db.collection('mail').add({\n            to: 'wsright987@gmail.com',\n            message: {\n              sname: this.state.name,\n              email: this.state.email,\n              message: this.state.message,\n              date: date,\n              time: time,\n              timezone: d.getTimezoneOffset(),\n              id: id\n            }\n          }).then(() => console.log('Queued email for delivery!'));\n*/\n        // For component to show message was sent\n        if (!this.state.datasent){\n            this.setState({dataSent: true});\n        } \n    }\n\n    resetSend() {\n        this.setState({dataSent: false});\n    }\n    \n    render (){\n        let contactInfoStyle = {\n            textAlign: 'center',\n            fontSize: '1.2em',\n        }\n        let contactInfoStyle2 = {\n            textAlign: 'center',\n            fontSize: '.8em',\n            color: 'rgb(1,1,1,.25)',\n        }\n        let formOptionStyle = {\n            textAlign: 'center'\n        }\n        let contactFormStyle = {\n            maxWidth: 450,\n            margin: 'auto',\n            padding: '0 3%',\n        }\n        let contactFormBtn = {\n            margin: 'auto',\n            display: 'block',\n            padding: '5px 25px',\n            outline: 'none',\n            background: 'rgba(0, 187, 16, .5)',\n            border: '1pt solid white',\n            color: 'white',\n            fontSize: '1.2em',\n            borderRadius: '25px',\n        }\n        let contactFormBtn2 = {\n            margin: 'auto',\n            display: 'block',\n            padding: '5px 25px',\n            outline: 'none',\n            background: 'lightgray',\n            border: '1pt solid white',\n            color: 'white',\n            fontSize: '1.2em',\n            borderRadius: '25px',\n        }\n        \n        return (\n            <div className={\"container\"} id=\"contact-container\">\n                <div id=\"contact-header\">\n                    <h3 id=\"contact-title\"><strong>HOW CAN YOU REACH ME?</strong></h3>\n                </div>\n                <div style={contactInfoStyle}>\n                    <a href=\"mailto:wsright987@gmail.com\">REALITYCALC@GMAIL.COM</a>\n                    <br/>\n                    <strong>609-472-2897</strong>\n                    \n                </div>\n                    \n                {this.state.dataSent ?\n                <div className=\"msg\"style={{ textAlign: 'center' }}>\n                    <br/>\n                    <p style={{ fontSize: '1.2em' }}>Great news! Message sent successfully!</p>\n                    <button className=\"new-message-btn\" style={contactFormBtn2} onClick={(e)=>{this.resetSend()}}>New Message</button>\n                </div> :\n                <form style={contactFormStyle} >\n                    <div style={formOptionStyle}>\n                        <p>Or use this contact form below:</p>\n                    </div>\n                    <div className=\"form-group\"> \n                        <label name=\"inputName\">Your Name</label>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"name-input\" \n                            name=\"name\" value={this.state.name}  \n                            onChange={(e)=>{this.setState({ name: e.target.value })}}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label name=\"inputEmail\">Your Email</label>\n                        <input type=\"email\" \n                            className=\"form-control\" \n                            id=\"email-input\" \n                            aria-describedby=\"emailHelp\" \n                            value={this.state.email} \n                            onChange={(e)=>{this.setState({ email: e.target.value })}}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label name=\"inputMessage\" className=\"form-text\">Your Message </label>\n                        <textarea type=\"text\" \n                            className=\"form-control\" \n                            id=\"message-input\" \n                            name=\"text-area\" \n                            value={this.state.message} \n                            onChange={(e)=>{this.setState({ message: e.target.value })}}\n                        />\n                    </div>\n                    <input type=\"submit\" className={\"input for-control submit\"} style={contactFormBtn} value=\"Send\" onClick={(e)=>{this.handleSubmit(e)}}/>\n                </form>}\n            </div>\n        )\n    }\n}\n\nexport default Contact;","/Users/samuelwright/Projects/portfolio/src/Components/Header/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Location/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Map/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Projects/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Components/Skills/index.js",["86"],"import React, { Component } from 'react';\nimport AppManager from '../../AppManager';\nimport '../../App.css';\n\nclass Skills extends Component {\n    render (){\n        return (\n            <div className=\"container\" id=\"skills-container\">\n\t\t\t\t<div className=\"header-box\" id=\"skills-title1\">\n\t\t\t\t\t<h3 className=\"title\"><strong>WHAT DO I DO?</strong></h3>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"do-list\">\n\t\t\t\t\t{/*!AppManager.company ? null : <p>Work at AweSumo creating software</p>*/}\n\t\t\t\t\t<p>Create fun web projects in my spare time</p>\n\t\t\t\t\t<p>Write quality code</p>\n\t\t\t\t\t<p>Keep my functions small, focused, and easy to understand</p>\n\t\t\t\t\t<p>Leave comments as I create and maintain code</p>\n\t\t\t\t\t<p>Make tests for the code I write</p>\n\t\t\t\t\t<p>Document every feature</p>\n\t\t\t\t\t<p>Keep track of every bug</p>\n\t\t\t\t\t<p>Strictly follow security best practices</p>\n\t\t\t\t\t<p>Never stop learning</p>\n\t\t\t\t</div>\n\t\t\t\t<hr/>\n\t\t\t\t<div id=\"skills2-header\">\n\t\t\t\t\t<h3 id=\"skills2-title\"><strong>WHAT DO I KNOW?</strong></h3>\n\t\t\t\t</div>\n\t\t\t\t<ul id=\"know-list\">\n\t\t\t\t\t<li>HTML, CSS, Javascript (ES5, ES6) and Typescript languages</li>\n\t\t\t\t\t<li>Node JS, MongoDB and Firebase server side technologies</li>\n\t\t\t\t\t<li>How to design user friendly UX with React, React Native, Redux, JQuery, HTML5 Canvas, SASS</li>\n\t\t\t\t\t<li>How to use a feature/dev/master branch workflow in Git</li>\n\t\t\t\t\t<li>How to design, develop, deploy and support RESTful services</li>\n\t\t\t\t\t<li>How to query and interpret Google Analytics data to make meaningful insights</li>\n\t\t\t\t\t<li>How to make an excellent <a target=\"_blank\" href=\"https://github.com/Sleighs/google-maps-react-tutorial/\" rel=\"noreferrer\">Github Repository</a></li>\n\t\t\t\t</ul>\n            </div>\n        )\n    }\n}\n\nexport default Skills;","/Users/samuelwright/Projects/portfolio/src/Components/Tag/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Pages/index.js",[],"/Users/samuelwright/Projects/portfolio/src/Pages/Resume/index.js",["87","88","89","90"],"/Users/samuelwright/Projects/portfolio/src/Pages/Home/index.js",[],{"ruleId":"91","severity":1,"message":"92","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":17},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"91","severity":1,"message":"99","line":110,"column":13,"nodeType":"93","messageId":"94","endLine":110,"endColumn":30},{"ruleId":"91","severity":1,"message":"100","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":18},{"ruleId":"91","severity":1,"message":"101","line":7,"column":3,"nodeType":"93","messageId":"94","endLine":7,"endColumn":11},{"ruleId":"91","severity":1,"message":"102","line":8,"column":3,"nodeType":"93","messageId":"94","endLine":8,"endColumn":10},{"ruleId":"91","severity":1,"message":"103","line":9,"column":3,"nodeType":"93","messageId":"94","endLine":9,"endColumn":9},{"ruleId":"91","severity":1,"message":"104","line":97,"column":7,"nodeType":"93","messageId":"94","endLine":97,"endColumn":13},"no-unused-vars","'Portfolio' is defined but never used.","Identifier","unusedVar","no-native-reassign",["105"],"no-negated-in-lhs",["106"],"'contactInfoStyle2' is assigned a value but never used.","'AppManager' is defined but never used.","'Location' is defined but never used.","'Contact' is defined but never used.","'Footer' is defined but never used.","'Github' is defined but never used.","no-global-assign","no-unsafe-negation"]