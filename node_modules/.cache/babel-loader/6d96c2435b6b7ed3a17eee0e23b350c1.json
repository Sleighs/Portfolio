{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelwright/Projects/portfolio/src/Pages/Home/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport Cookies from 'universal-cookie';\nimport { Header, Skills, Projects, Location, Contact, Footer } from '../../Components';\nimport '../../App.css';\nconst cookiesDarkMode = new Cookies();\nconst darkModeCookies = cookiesDarkMode.get('darkModeData');\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textColor: 'black',\n      backgroundColor: 'white',\n      darkMode: false\n    };\n    this.toggleDarkMode = this.toggleDarkMode.bind(this);\n  }\n\n  componentDidMount() {\n    if (darkModeCookies === true) {\n      this.setState({\n        textColor: 'white',\n        backgroundColor: 'black',\n        darkMode: true\n      });\n    }\n  }\n\n  toggleDarkMode() {\n    if (!this.state.darkMode) {\n      this.setState({\n        textColor: 'white',\n        backgroundColor: 'black',\n        darkMode: true\n      });\n      cookiesDarkMode.set('darkModeData', true, {\n        path: '/',\n        maxAge: 1200\n      });\n    } else {\n      this.setState({\n        textColor: 'black',\n        backgroundColor: 'white',\n        darkMode: false\n      });\n      cookiesDarkMode.set('darkModeData', false, {\n        path: '/',\n        maxAge: 1200\n      });\n    }\n  }\n\n  render() {\n    let portfolioStyle = {\n      fontSize: '1.2em'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100%',\n        maxWidth: '871px',\n        margin: 'auto',\n        color: this.state.textColor,\n        backgroundColor: this.state.backgroundColor\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"portfolio\",\n        className: \"container-md\",\n        style: portfolioStyle,\n        children: [/*#__PURE__*/_jsxDEV(DarkMode, {\n          toggle: this.toggleDarkMode,\n          modeState: this.state.darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          resumePage: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Skills, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Projects, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Github, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Location, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Github extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"github-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"DO I HAVE A GITHUB?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"github-text\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"http://www.github.com/sleighs\",\n          target: \"blank\",\n          children: \"Yes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst DarkMode = props => {\n  _s();\n\n  const {\n    modeState,\n    toggle\n  } = props;\n  const [darkModeState, getDarkModeState] = useState(modeState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"dark-mode-container\",\n    style: {\n      display: 'none',\n      position: 'absolute'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (darkModeState === true) {\n          toggle();\n          getDarkModeState(false);\n        } else {\n          toggle();\n          getDarkModeState(true);\n        }\n\n        console.log('darkMode ', modeState);\n      },\n      children: modeState === true ? 'Dark On' : 'Light On'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DarkMode, \"gvMk7bmRT4h2x4RBjpDYsBvJfME=\");\n\n_c = DarkMode;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"DarkMode\");","map":{"version":3,"sources":["/Users/samuelwright/Projects/portfolio/src/Pages/Home/index.js"],"names":["React","Component","useState","Cookies","Header","Skills","Projects","Location","Contact","Footer","cookiesDarkMode","darkModeCookies","get","Home","constructor","props","state","textColor","backgroundColor","darkMode","toggleDarkMode","bind","componentDidMount","setState","set","path","maxAge","render","portfolioStyle","fontSize","height","maxWidth","margin","color","Github","DarkMode","modeState","toggle","darkModeState","getDarkModeState","display","position","console","log"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport Cookies from 'universal-cookie'\nimport { \n  Header,\n  Skills,\n  Projects,\n  Location,\n  Contact,\n  Footer\n} from '../../Components';\nimport '../../App.css';\n\nconst cookiesDarkMode = new Cookies()\nconst darkModeCookies = cookiesDarkMode.get('darkModeData')\n\nclass Home extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      textColor: 'black',\n      backgroundColor: 'white',\n      darkMode: false,\n    }\n\n    this.toggleDarkMode = this.toggleDarkMode.bind(this);\n  }\n\n  componentDidMount(){\n    if (darkModeCookies === true){\n      this.setState({\n        textColor: 'white',\n        backgroundColor: 'black',\n        darkMode: true,\n      })\n    }\n  }\n\n  toggleDarkMode(){\n    if (!this.state.darkMode){\n      this.setState({\n        textColor: 'white',\n        backgroundColor: 'black',\n        darkMode: true,\n      })\n      cookiesDarkMode.set(\n        'darkModeData', \n        true, \n        {path:'/', maxAge: 1200,}\n      )\n    } else {\n      this.setState({\n        textColor: 'black',\n        backgroundColor: 'white',\n        darkMode: false,\n      })\n      cookiesDarkMode.set(\n        'darkModeData', \n        false, \n        {path:'/', maxAge: 1200,}\n      )\n    }\n    \n  }\n\n  render() {\n    let portfolioStyle = {\n      fontSize: '1.2em',\n    }\n\n    return (\n      <div \n        style={{\n          height: '100%',\n          maxWidth: '871px',\n          margin: 'auto',\n          color: this.state.textColor,\n          backgroundColor: this.state.backgroundColor,\n        }}\n      > \n        <div \n          id=\"portfolio\" \n          className={\"container-md\"} \n          style={portfolioStyle}\n        >\n          <DarkMode toggle={this.toggleDarkMode} modeState={this.state.darkMode}/>\n          <Header  resumePage={false}/>\n          <Skills />\n          <hr/>\n          <Projects />\n          <hr/>\n          <Github />\n          <hr/>\n          <Location />\n          <hr/>\n          <Contact />\n          <hr/>\n          <Footer />\n        </div>\n        \n      </div>\n    );\n  }\n}\n\n\nclass Github extends Component {\n  render() {\n    return(\n      <div id=\"github-container\" >\n        <h3 className=\"title\"><strong>DO I HAVE A GITHUB?</strong></h3>\n        <p id=\"github-text\"><a  href=\"http://www.github.com/sleighs\" target=\"blank\">Yes.</a></p>\n      </div>\n    )\n  }\n  \n}\n\nconst DarkMode = (props) => {\n  const { \n    modeState,\n    toggle\n  } = props\n\n  const [darkModeState, getDarkModeState] = useState(modeState)\n\n  return(\n    <div id=\"dark-mode-container\" \n      style={{\n        display: 'none',\n        position: 'absolute',\n      }}>\n      <button onClick={()=>{\n        if (darkModeState === true){\n          toggle()\n          getDarkModeState(false)\n        } else {\n          toggle()\n          getDarkModeState(true)\n        }\n\n        console.log('darkMode ', modeState )\n      }}>\n        {modeState === true ? 'Dark On' : 'Light On'}\n      </button>\n    </div>\n  )\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}