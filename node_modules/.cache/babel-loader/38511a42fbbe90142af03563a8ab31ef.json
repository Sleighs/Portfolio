{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelwright/Projects/portfolio/src/Pages/Graph/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react'; //import { ForceGraph3D } from 'react-force-graph';\n\nimport { ForceGraph2D, ForceGraph3D, ForceGraphVR, ForceGraphAR } from 'react-force-graph';\nexport default function GraphPage() {\n  _s();\n\n  const initialData = [{\n    name: 'car',\n    value: 10\n  }, {\n    name: 'bike',\n    value: 20\n  }, {\n    name: 'truck',\n    value: 30\n  }, {\n    name: 'bus',\n    value: 25\n  }, {\n    name: 'train',\n    value: 50\n  }, {\n    name: 'plane',\n    value: 75\n  }];\n  const width = 500;\n  const height = 150;\n  const padding = 20;\n  const maxValue = 100;\n  const [chartdata, setChartData] = useState(initialData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"chart\",\n      viewBox: \"0 0 500 150\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"\",\n        fill: \"none\",\n        stroke: \"white\",\n        strokeWidth: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ForceGraph, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GraphPage, \"/WUNuMRijZzI7qKqTYiLEky5mc4=\");\n\n_c = GraphPage;\n\nconst ForceGraph = () => {\n  _s2();\n\n  const [data, setData] = useState({\n    nodes: [{\n      id: \"Harry\"\n    }, {\n      id: \"Sally\"\n    }, {\n      id: \"Alice\"\n    }],\n    links: [{\n      source: \"Harry\",\n      target: \"Sally\"\n    }, {\n      source: \"Harry\",\n      target: \"Alice\"\n    }]\n  });\n  const ref = useRef();\n  useEffect(() => {\n    ref.current.d3Force(\"charge\").strength(-100);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ForceGraph3D, {\n    ref: ref,\n    graphData: data,\n    nodeLabel: \"id\",\n    linkDirectionalParticles: 2,\n    linkDirectionalParticleWidth: 4\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(ForceGraph, \"6MdWjb01FV8x6Q/2pWPNAxcBkU0=\");\n\n_c2 = ForceGraph;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GraphPage\");\n$RefreshReg$(_c2, \"ForceGraph\");","map":{"version":3,"sources":["/Users/samuelwright/Projects/portfolio/src/Pages/Graph/index.js"],"names":["React","useEffect","useRef","useState","ForceGraph2D","ForceGraph3D","ForceGraphVR","ForceGraphAR","GraphPage","initialData","name","value","width","height","padding","maxValue","chartdata","setChartData","ForceGraph","data","setData","nodes","id","links","source","target","ref","current","d3Force","strength"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD,C,CACA;;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,YAArC,EAAmDC,YAAnD,QAAuE,mBAAvE;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAMC,WAAW,GAAG,CAClB;AACIC,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,KAAK,EAAE;AAFX,GADkB,EAKlB;AACID,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,KAAK,EAAE;AAFX,GALkB,EASlB;AACID,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,KAAK,EAAE;AAFX,GATkB,EAalB;AACID,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,KAAK,EAAE;AAFX,GAbkB,EAiBlB;AACID,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,KAAK,EAAE;AAFX,GAjBkB,EAqBlB;AACID,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,KAAK,EAAE;AAFX,GArBkB,CAApB;AA2BA,QAAMC,KAAK,GAAG,GAAd;AACA,QAAMC,MAAM,GAAG,GAAf;AACA,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,QAAQ,GAAG,GAAjB;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAACM,WAAD,CAA1C;AAGA,sBACE;AAAA,4BACI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAgB,MAAA,OAAO,EAAC,aAAxB;AAAA,6BACI;AAAM,QAAA,CAAC,EAAC,EAAR;AAAW,QAAA,IAAI,EAAC,MAAhB;AAAuB,QAAA,MAAM,EAAC,OAA9B;AAAsC,QAAA,WAAW,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA7CuBD,S;;KAAAA,S;;AAgDxB,MAAMU,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC;AAC7BkB,IAAAA,KAAK,EAAE,CACP;AAAEC,MAAAA,EAAE,EAAE;AAAN,KADO,EAEP;AAAEA,MAAAA,EAAE,EAAE;AAAN,KAFO,EAGP;AAAEA,MAAAA,EAAE,EAAE;AAAN,KAHO,CADsB;AAM7BC,IAAAA,KAAK,EAAE,CACP;AAAEC,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KADO,EAEP;AAAED,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KAFO;AANsB,GAAD,CAAhC;AAYA,QAAMC,GAAG,GAAGxB,MAAM,EAAlB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZyB,IAAAA,GAAG,CAACC,OAAJ,CAAYC,OAAZ,CAAoB,QAApB,EAA8BC,QAA9B,CAAuC,CAAC,GAAxC;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,YAAD;AACI,IAAA,GAAG,EAAEH,GADT;AAEI,IAAA,SAAS,EAAEP,IAFf;AAGI,IAAA,SAAS,EAAC,IAHd;AAII,IAAA,wBAAwB,EAAE,CAJ9B;AAKI,IAAA,4BAA4B,EAAE;AALlC;AAAA;AAAA;AAAA;AAAA,UADJ;AASC,CA5BL;;IAAMD,U;;MAAAA,U","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\n//import { ForceGraph3D } from 'react-force-graph';\nimport { ForceGraph2D, ForceGraph3D, ForceGraphVR, ForceGraphAR } from 'react-force-graph';\n\nexport default function GraphPage() {\n  const initialData = [\n    {\n        name: 'car',\n        value: 10,\n    },\n    {\n        name: 'bike',\n        value: 20,\n    },\n    {\n        name: 'truck',\n        value: 30,\n    },\n    {\n        name: 'bus',\n        value: 25,\n    },\n    {\n        name: 'train',\n        value: 50,\n    },\n    {\n        name: 'plane',\n        value: 75,\n    },\n  ]\n\n  const width = 500;\n  const height = 150;\n  const padding = 20;\n  const maxValue = 100;\n\n  const [chartdata, setChartData] = useState(initialData);\n\n\n  return (\n    <div>\n        <svg id=\"chart\" viewBox=\"0 0 500 150\">\n            <path d=\"\" fill=\"none\" stroke=\"white\" strokeWidth=\"5\" />\n        </svg>\n\n        <ForceGraph />\n    </div>\n  )\n}\n\n\nconst ForceGraph = () => {\n    const [data, setData] = useState({\n        nodes: [\n        { id: \"Harry\" },\n        { id: \"Sally\" },\n        { id: \"Alice\" }\n        ],\n        links: [\n        { source: \"Harry\", target: \"Sally\" },\n        { source: \"Harry\", target: \"Alice\" }\n        ]\n    });\n    \n    const ref = useRef();\n    \n    useEffect(() => {\n        ref.current.d3Force(\"charge\").strength(-100);\n    }, []);\n    \n    return (\n        <ForceGraph3D\n            ref={ref}\n            graphData={data}\n            nodeLabel=\"id\"\n            linkDirectionalParticles={2}\n            linkDirectionalParticleWidth={4}\n            />\n        );\n    }"]},"metadata":{},"sourceType":"module"}