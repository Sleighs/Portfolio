{"ast":null,"code":"var _jsxFileName = \"/Users/samuelwright/Projects/portfolio/src/Components/Header/index.js\";\nimport React, { Component } from 'react';\nimport AppManager from '../../AppManager';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // The algorithm types and deletes each word in the array\n      arr: [/*\"ENGINEER\", \"ARCHITECT\", \"DEVELOPER\", */\n      \"FRONT-END ENGINEER\", \"REACT DEVELOPER\", \"FULL STACK DEVELOPER\"],\n      pos: 0,\n      text: null,\n      typedText: [],\n      newText: \"\",\n      a: [],\n      reverse: false,\n      interval: null,\n      n: 'start'\n    };\n    this.init = this.init.bind(this);\n    this.getText = this.getText.bind(this);\n  }\n  componentDidMount() {\n    AppManager.primaryInterval = setTimeout(() => {\n      this.init('start');\n    }, 1090);\n  }\n  // For precise interval times per word\n  getInterval(type) {\n    var time;\n    //var random = Math.floor(Math.random() * 2800) + 200;\n\n    switch (type) {\n      case 1:\n        time = 500;\n        break;\n      case 2:\n        time = 1800;\n        break;\n      case 0:\n        time = 2000;\n        break;\n      default:\n        time = 2000;\n    }\n    return time;\n  }\n  getText() {\n    // Get word from array\n    var word = this.state.arr[this.state.pos];\n    // Transform word from string to array\n    var newArr = word.split(\"\");\n    var typedText = this.state.typedText;\n    var reverse = this.state.reverse;\n    var a = this.state.a;\n    var newText = this.state.newText;\n\n    // Changes the time interval timer for spelling or deleting\n    var randomTime;\n    if (reverse === true) {\n      randomTime = Math.floor(Math.random() * 200) + 25;\n    } else {\n      randomTime = Math.floor(Math.random() * 275) + 75;\n    }\n    AppManager.newIntervalTime = randomTime;\n\n    // Delete text if reverse is true\n    if (reverse === true) {\n      // Remove last letter from word\n      typedText.splice(-1, 1);\n      // Build new word\n      for (var i = a.length; i > typedText.length; i--) {\n        a.splice(-1, 1);\n        newText = a.join(\"\");\n\n        // Once word is fully deleted switch to next word\n        if (a.join(\"\") === \"\") {\n          typedText = [];\n          reverse = false;\n\n          //stop after full word delete\n          clearInterval(AppManager.interval);\n          var rand1 = Math.floor(Math.random() * 1800) + 200;\n          AppManager.primaryInterval = setTimeout(() => {\n            this.init('start');\n          }, rand1);\n\n          // Stops interval after one cycle through word list\n          /*if (this.state.pos === this.state.arr.length - 1) {\n              this.setState({\n                n: \"start\"\n              });\n              //initBtn.innerHTML = \"Start\";\n              \n              clearInterval(AppManager.interval);\n          }*/\n\n          // Move to next word or return to first word if at last word\n          if (this.state.pos < this.state.arr.length - 1) {\n            this.setState({\n              pos: this.state.pos + 1\n            });\n          } else {\n            this.setState({\n              pos: 0\n            });\n          }\n        }\n      }\n\n      // Type word if reverse is false\n    } else if (!this.state.reverse) {\n      a = [];\n\n      // Add next letter in word\n      typedText.push(newArr[typedText.length]);\n\n      // Create new word\n      for (var j = 0; j < typedText.length; j++) {\n        a.push(newArr[j]);\n        newText = a.join(\"\");\n\n        // If new word equals complete word make reverse true to begin delete animation\n        if (newText === word) {\n          reverse = true;\n\n          //stop after full word typed\n          clearInterval(AppManager.interval);\n          var rand2 = Math.floor(Math.random() * 4000) + 100;\n          AppManager.primaryInterval = setTimeout(() => {\n            this.init('start');\n          }, rand2);\n        }\n      }\n    }\n\n    // Save the typed text for next iteration\n    this.setState({\n      typedText: typedText,\n      reverse: reverse,\n      a: a,\n      newText: newText\n    });\n  }\n  init(type) {\n    var log = document.getElementById(\"log\");\n    if (type === \"stop\") {\n      this.setState({\n        n: 'start'\n      });\n      clearInterval(AppManager.interval);\n      clearInterval(AppManager.primaryInterval);\n    }\n    if (type === \"start\") {\n      this.setState({\n        n: 'stop'\n      });\n      AppManager.interval = setInterval(interval => {\n        this.getText();\n        log.innerHTML = this.state.newText;\n      }, AppManager.newIntervalTime);\n    }\n  }\n  render() {\n    // Custom styling for resume view\n    let HeaderContainerStyle = this.props.resumePage === true ? {\n      padding: '3% 1% 5% 1%'\n    } : {\n      padding: '4% 1%'\n    };\n    let NameStyle = this.props.resumePage === true ? {\n      fontSize: '48px'\n    } : {};\n    let HeaderTextStyle = this.props.resumePage === true ? {\n      marginTop: -15,\n      textAlign: 'center'\n    } : {\n      textAlign: 'center'\n    };\n    let LogStyle = this.props.resumePage === true ? {\n      fontSize: '44px'\n    } : {};\n    let GlyphStyle = this.props.resumePage === true ? {\n      //fontSize: '56px',\n    } : {};\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"header-container\",\n      className: \"container\",\n      onClick: () => {\n        this.init(this.state.n);\n      },\n      style: HeaderContainerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"name-container\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"name\",\n            style: NameStyle,\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"SAMUEL WRIGHT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-text\",\n          id: \"header-description\",\n          style: HeaderTextStyle,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"log\",\n              style: LogStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"glyph\",\n              style: GlyphStyle,\n              children: \"|\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }, this), this.props.resumePage === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"github-text\",\n        style: {\n          textAlign: 'center',\n          margin: 'auto',\n          marginTop: '-15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 25\n          },\n          children: [\"(609)\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: 14\n            },\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 26\n          }, this), \"472-2897 \\u2022 wsright987@gmail.com\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"http://www.github.com/sleighs\",\n          target: \"blank\",\n          style: {\n            color: 'white',\n            fontSize: 35,\n            display: 'block',\n            textDecoration: 'none'\n          },\n          children: \"github.com/sleighs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Header;","map":{"version":3,"names":["React","Component","AppManager","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","constructor","props","state","arr","pos","text","typedText","newText","a","reverse","interval","n","init","bind","getText","componentDidMount","primaryInterval","setTimeout","getInterval","type","time","word","newArr","split","randomTime","Math","floor","random","newIntervalTime","splice","i","length","join","clearInterval","rand1","setState","push","j","rand2","log","document","getElementById","setInterval","innerHTML","render","HeaderContainerStyle","resumePage","padding","NameStyle","fontSize","HeaderTextStyle","marginTop","textAlign","LogStyle","GlyphStyle","id","className","onClick","style","children","fileName","_jsxFileName","lineNumber","columnNumber","margin","href","target","color","display","textDecoration"],"sources":["/Users/samuelwright/Projects/portfolio/src/Components/Header/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport AppManager from '../../AppManager';\nimport '../../App.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // The algorithm types and deletes each word in the array\n            arr: [\n              /*\"ENGINEER\", \"ARCHITECT\", \"DEVELOPER\", */ \n              \"FRONT-END ENGINEER\",\n              \"REACT DEVELOPER\",\n              \"FULL STACK DEVELOPER\"\n            ],\n            pos: 0,\n            text: null,\n            typedText: [],\n            newText: \"\",\n            a: [],\n            reverse: false,\n            interval: null,\n            n: 'start'\n        }\n \n        this.init = this.init.bind(this);\n        this.getText = this.getText.bind(this);\n    }\n\n    componentDidMount() {\n      AppManager.primaryInterval = setTimeout(()=>{\n        this.init('start');\n      }, 1090)\n      \n    }\n    // For precise interval times per word\n    getInterval(type){\n      var time;\n      //var random = Math.floor(Math.random() * 2800) + 200;\n      \n      switch(type){\n        case 1:\n          time = 500;\n          break;\n        case 2:\n          time = 1800;\n          break;\n        case 0:\n          time = 2000;\n          break;\n        default:\n          time = 2000\n      }\n      return time;\n    }\n\n    getText() {\n        // Get word from array\n        var word = this.state.arr[this.state.pos];\n        // Transform word from string to array\n        var newArr = word.split(\"\");\n\n        var typedText = this.state.typedText;\n        var reverse = this.state.reverse;\n        var a = this.state.a;\n        var newText = this.state.newText;\n\n        // Changes the time interval timer for spelling or deleting\n        var randomTime;\n        if (reverse === true){\n          randomTime = Math.floor(Math.random() * 200) + 25;\n        } else {\n          randomTime = Math.floor(Math.random() * 275) + 75;\n        }\n        AppManager.newIntervalTime = randomTime;\n      \n        // Delete text if reverse is true\n        if (reverse === true) {\n          // Remove last letter from word\n          typedText.splice(-1, 1);\n          // Build new word\n          for (var i = a.length; i > typedText.length; i--) {\n            a.splice(-1, 1);\n            newText = a.join(\"\");\n      \n            // Once word is fully deleted switch to next word\n            if (a.join(\"\") === \"\") {\n              typedText = [];\n              reverse = false;\n\n              //stop after full word delete\n              clearInterval(AppManager.interval);\n\n\n              var rand1 = Math.floor(Math.random() * 1800) + 200;\n\n              AppManager.primaryInterval = setTimeout(()=>{\n                this.init('start');\n              }, rand1)\n              \n              // Stops interval after one cycle through word list\n              /*if (this.state.pos === this.state.arr.length - 1) {\n                  this.setState({\n                    n: \"start\"\n                  });\n                  //initBtn.innerHTML = \"Start\";\n                  \n                  clearInterval(AppManager.interval);\n              }*/\n      \n              // Move to next word or return to first word if at last word\n              if (this.state.pos < this.state.arr.length - 1) {\n                this.setState({\n                    pos: this.state.pos + 1\n                });\n              } else {\n                this.setState({\n                    pos: 0\n                });\n              }\n            }\n          }\n      \n          // Type word if reverse is false\n        } else if (!this.state.reverse) {\n          a = [];\n\n          // Add next letter in word\n          typedText.push(newArr[typedText.length]);\n      \n          // Create new word\n          for (var j = 0; j < typedText.length; j++) {\n            a.push(newArr[j]);\n            newText = a.join(\"\");\n      \n            // If new word equals complete word make reverse true to begin delete animation\n            if (newText === word) {\n              reverse = true;\n\n              //stop after full word typed\n              clearInterval(AppManager.interval);\n              var rand2 = Math.floor(Math.random() * 4000) + 100;\n              AppManager.primaryInterval = setTimeout(()=>{\n                this.init('start');\n              }, rand2)\n            }\n          }\n        }\n\n        // Save the typed text for next iteration\n        this.setState({\n            typedText: typedText,\n            reverse: reverse,\n            a: a,\n            newText: newText\n        })\n      }\n            \n      init(type) {\n        var log = document.getElementById(\"log\");\n      \n        if (type === \"stop\") {\n            this.setState({\n                n: 'start'\n            });\n          \n          clearInterval(AppManager.interval);\n          clearInterval(AppManager.primaryInterval);\n        }\n      \n        if (type === \"start\") {\n            this.setState({\n                n: 'stop'\n            });\n\n            AppManager.interval = setInterval((interval) => {\n                this.getText();\n                log.innerHTML = this.state.newText;\n            }, AppManager.newIntervalTime);\n        }\n      }\n  \n    render (){\n\n      // Custom styling for resume view\n      let HeaderContainerStyle = (\n        this.props.resumePage === true \n        ? {\n            padding: '3% 1% 5% 1%',\n          } \n        : {\n          padding: '4% 1%',\n        }\n      )\n      let NameStyle = (\n        this.props.resumePage === true \n        ? {\n            fontSize: '48px',\n          } \n        : {}\n      )\n      let HeaderTextStyle = (\n        this.props.resumePage === true \n        ? {\n            marginTop: -15,\n            textAlign: 'center',\n          } \n        : {\n          textAlign: 'center',\n        }\n      )\n      let LogStyle = (\n        this.props.resumePage === true \n        ? {\n          fontSize: '44px',\n          } \n        : {}\n      )\n      let GlyphStyle = (\n        this.props.resumePage === true \n        ? {\n            //fontSize: '56px',\n          } \n        : {}\n      )\n\n        return (\n            <div id=\"header-container\" className=\"container\" \n              onClick={ ()=>{this.init(this.state.n)}}\n              style={HeaderContainerStyle}\n            >\n              <div>\n                <div id=\"name-container\">\n                  <h1 id=\"name\" style={NameStyle}><strong>SAMUEL WRIGHT</strong></h1>\n                </div>\n                <div className=\"header-text\" id=\"header-description\" \n                  style={HeaderTextStyle}>\n                  <h2>\n                    <span id=\"title\" >{/* For a static word */}</span>\n                    <span id=\"log\" style={LogStyle}></span>\n                    <span id='glyph' style={GlyphStyle}>|</span>\n                  </h2>\n                </div>\n              </div>\n              {this.props.resumePage === true ? \n                <div className='github-text'\n                  style={{\n                    textAlign: 'center',\n                    margin: 'auto',\n                    marginTop: '-15px',\n                  }}\n                >\n                  <span style={{\n                    fontSize: 25,\n                  }}>\n                    (609)<span style={{fontSize: 14,}}> </span>472-2897 &#8226; wsright987@gmail.com\n                  </span>\n                  <a  href=\"http://www.github.com/sleighs\" \n                    target=\"blank\"\n                    style={{\n                      color: 'white',\n                      fontSize: 35,\n                      display: 'block',\n                      textDecoration: 'none',\n                    }}\n                  >\n                    github.com/sleighs\n                  </a>\n                </div>\n              : <></> }\n            </div>\n        )\n    }\n}\n\nexport default Header;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}