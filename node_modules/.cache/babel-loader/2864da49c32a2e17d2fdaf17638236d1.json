{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/samuelwright/Projects/portfolio/src/Components/Header/index.js\";\nimport React, { Component } from 'react';\nimport AppManager from '../../AppManager';\nimport '../../App.css';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // The algorithm types and deletes each word in the array\n      arr: [\n      /*\"ENGINEER\", \"ARCHITECT\", \"DEVELOPER\", */\n      \"FRONT-END ENGINEER\", \"REACT DEVELOPER\", \"FULL STACK DEVELOPER\"],\n      pos: 0,\n      text: null,\n      typedText: [],\n      newText: \"\",\n      a: [],\n      reverse: false,\n      interval: null,\n      n: 'start'\n    };\n    this.init = this.init.bind(this);\n    this.getText = this.getText.bind(this);\n  }\n\n  componentDidMount() {\n    AppManager.primaryInterval = setTimeout(() => {\n      this.init('start');\n    }, 1090);\n  } // For precise interval times per word\n\n\n  getInterval(type) {\n    var time; //var random = Math.floor(Math.random() * 2800) + 200;\n\n    switch (type) {\n      case 1:\n        time = 500;\n        break;\n\n      case 2:\n        time = 1800;\n        break;\n\n      case 0:\n        time = 2000;\n        break;\n\n      default:\n        time = 2000;\n    }\n\n    return time;\n  }\n\n  getText() {\n    // Get word from array\n    var word = this.state.arr[this.state.pos]; // Transform word from string to array\n\n    var newArr = word.split(\"\");\n    var typedText = this.state.typedText;\n    var reverse = this.state.reverse;\n    var a = this.state.a;\n    var newText = this.state.newText; // Changes the time interval timer for spelling or deleting\n\n    var randomTime;\n\n    if (reverse === true) {\n      randomTime = Math.floor(Math.random() * 200) + 25;\n    } else {\n      randomTime = Math.floor(Math.random() * 275) + 75;\n    }\n\n    AppManager.newIntervalTime = randomTime; // Delete text if reverse is true\n\n    if (reverse === true) {\n      // Remove last letter from word\n      typedText.splice(-1, 1); // Build new word\n\n      for (var i = a.length; i > typedText.length; i--) {\n        a.splice(-1, 1);\n        newText = a.join(\"\"); // Once word is fully deleted switch to next word\n\n        if (a.join(\"\") === \"\") {\n          typedText = [];\n          reverse = false; //stop after full word delete\n\n          clearInterval(AppManager.interval);\n          var rand1 = Math.floor(Math.random() * 1800) + 200;\n          AppManager.primaryInterval = setTimeout(() => {\n            this.init('start');\n          }, rand1); // Stops interval after one cycle through word list\n\n          /*if (this.state.pos === this.state.arr.length - 1) {\n              this.setState({\n                n: \"start\"\n              });\n              //initBtn.innerHTML = \"Start\";\n              \n              clearInterval(AppManager.interval);\n          }*/\n          // Move to next word or return to first word if at last word\n\n          if (this.state.pos < this.state.arr.length - 1) {\n            this.setState({\n              pos: this.state.pos + 1\n            });\n          } else {\n            this.setState({\n              pos: 0\n            });\n          }\n        }\n      } // Type word if reverse is false\n\n    } else if (!this.state.reverse) {\n      a = []; // Add next letter in word\n\n      typedText.push(newArr[typedText.length]); // Create new word\n\n      for (var j = 0; j < typedText.length; j++) {\n        a.push(newArr[j]);\n        newText = a.join(\"\"); // If new word equals complete word make reverse true to begin delete animation\n\n        if (newText === word) {\n          reverse = true; //stop after full word typed\n\n          clearInterval(AppManager.interval);\n          var rand2 = Math.floor(Math.random() * 4000) + 100;\n          AppManager.primaryInterval = setTimeout(() => {\n            this.init('start');\n          }, rand2);\n        }\n      }\n    } // Save the typed text for next iteration\n\n\n    this.setState({\n      typedText: typedText,\n      reverse: reverse,\n      a: a,\n      newText: newText\n    });\n  }\n\n  init(type) {\n    var log = document.getElementById(\"log\");\n\n    if (type === \"stop\") {\n      this.setState({\n        n: 'start'\n      });\n      clearInterval(AppManager.interval);\n      clearInterval(AppManager.primaryInterval);\n    }\n\n    if (type === \"start\") {\n      this.setState({\n        n: 'stop'\n      });\n      AppManager.interval = setInterval(interval => {\n        this.getText();\n        log.innerHTML = this.state.newText;\n      }, AppManager.newIntervalTime);\n    }\n  }\n\n  render() {\n    // Custom styling for resume view\n    let HeaderContainerStyle = this.props.resumePage === true ? {\n      padding: '3% 1% 5% 1%'\n    } : {\n      padding: '4% 1%'\n    };\n    let NameStyle = this.props.resumePage === true ? {\n      fontSize: '46px'\n    } : {};\n    let HeaderTextStyle = this.props.resumePage === true ? {\n      textAlign: 'center',\n      fontSize: '42px'\n    } : {\n      textAlign: 'center'\n    };\n    let LogStyle = this.props.resumePage === true ? {} : {};\n    let GlyphStyle = this.props.resumePage === true ? {//fontSize: '56px',\n    } : {};\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"header-container\",\n      className: \"container\",\n      onClick: () => {\n        this.init(this.state.n);\n      },\n      style: HeaderContainerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"name-container\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"name\",\n            style: NameStyle,\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"SAMUEL WRIGHT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-text\",\n          id: \"header-description\",\n          style: HeaderTextStyle,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"log\",\n              style: LogStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"glyph\",\n              style: GlyphStyle,\n              children: \"|\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }, this), this.props.resumePage === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"github-text\",\n        style: {\n          textAlign: 'center',\n          margin: 'auto',\n          marginTop: '-20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 28\n          },\n          children: [\"(609)\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: 14\n            },\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 26\n          }, this), \"472-2897 \\u2022 wsright987@gmail.com\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"http://www.github.com/sleighs\",\n          target: \"blank\",\n          style: {\n            color: 'white',\n            fontSize: 38,\n            display: 'block',\n            textDecoration: 'none'\n          },\n          children: \"github.com/sleighs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/Users/samuelwright/Projects/portfolio/src/Components/Header/index.js"],"names":["React","Component","AppManager","Header","constructor","props","state","arr","pos","text","typedText","newText","a","reverse","interval","n","init","bind","getText","componentDidMount","primaryInterval","setTimeout","getInterval","type","time","word","newArr","split","randomTime","Math","floor","random","newIntervalTime","splice","i","length","join","clearInterval","rand1","setState","push","j","rand2","log","document","getElementById","setInterval","innerHTML","render","HeaderContainerStyle","resumePage","padding","NameStyle","fontSize","HeaderTextStyle","textAlign","LogStyle","GlyphStyle","margin","marginTop","color","display","textDecoration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AppManager from '../../AppManager';\nimport '../../App.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // The algorithm types and deletes each word in the array\n            arr: [\n              /*\"ENGINEER\", \"ARCHITECT\", \"DEVELOPER\", */ \n              \"FRONT-END ENGINEER\",\n              \"REACT DEVELOPER\",\n              \"FULL STACK DEVELOPER\"\n            ],\n            pos: 0,\n            text: null,\n            typedText: [],\n            newText: \"\",\n            a: [],\n            reverse: false,\n            interval: null,\n            n: 'start'\n        }\n \n        this.init = this.init.bind(this);\n        this.getText = this.getText.bind(this);\n    }\n\n    componentDidMount() {\n      AppManager.primaryInterval = setTimeout(()=>{\n        this.init('start');\n      }, 1090)\n      \n    }\n    // For precise interval times per word\n    getInterval(type){\n      var time;\n      //var random = Math.floor(Math.random() * 2800) + 200;\n      \n      switch(type){\n        case 1:\n          time = 500;\n          break;\n        case 2:\n          time = 1800;\n          break;\n        case 0:\n          time = 2000;\n          break;\n        default:\n          time = 2000\n      }\n      return time;\n    }\n\n    getText() {\n        // Get word from array\n        var word = this.state.arr[this.state.pos];\n        // Transform word from string to array\n        var newArr = word.split(\"\");\n\n        var typedText = this.state.typedText;\n        var reverse = this.state.reverse;\n        var a = this.state.a;\n        var newText = this.state.newText;\n\n        // Changes the time interval timer for spelling or deleting\n        var randomTime;\n        if (reverse === true){\n          randomTime = Math.floor(Math.random() * 200) + 25;\n        } else {\n          randomTime = Math.floor(Math.random() * 275) + 75;\n        }\n        AppManager.newIntervalTime = randomTime;\n      \n        // Delete text if reverse is true\n        if (reverse === true) {\n          // Remove last letter from word\n          typedText.splice(-1, 1);\n          // Build new word\n          for (var i = a.length; i > typedText.length; i--) {\n            a.splice(-1, 1);\n            newText = a.join(\"\");\n      \n            // Once word is fully deleted switch to next word\n            if (a.join(\"\") === \"\") {\n              typedText = [];\n              reverse = false;\n\n              //stop after full word delete\n              clearInterval(AppManager.interval);\n\n\n              var rand1 = Math.floor(Math.random() * 1800) + 200;\n\n              AppManager.primaryInterval = setTimeout(()=>{\n                this.init('start');\n              }, rand1)\n              \n              // Stops interval after one cycle through word list\n              /*if (this.state.pos === this.state.arr.length - 1) {\n                  this.setState({\n                    n: \"start\"\n                  });\n                  //initBtn.innerHTML = \"Start\";\n                  \n                  clearInterval(AppManager.interval);\n              }*/\n      \n              // Move to next word or return to first word if at last word\n              if (this.state.pos < this.state.arr.length - 1) {\n                this.setState({\n                    pos: this.state.pos + 1\n                });\n              } else {\n                this.setState({\n                    pos: 0\n                });\n              }\n            }\n          }\n      \n          // Type word if reverse is false\n        } else if (!this.state.reverse) {\n          a = [];\n\n          // Add next letter in word\n          typedText.push(newArr[typedText.length]);\n      \n          // Create new word\n          for (var j = 0; j < typedText.length; j++) {\n            a.push(newArr[j]);\n            newText = a.join(\"\");\n      \n            // If new word equals complete word make reverse true to begin delete animation\n            if (newText === word) {\n              reverse = true;\n\n              //stop after full word typed\n              clearInterval(AppManager.interval);\n              var rand2 = Math.floor(Math.random() * 4000) + 100;\n              AppManager.primaryInterval = setTimeout(()=>{\n                this.init('start');\n              }, rand2)\n            }\n          }\n        }\n\n        // Save the typed text for next iteration\n        this.setState({\n            typedText: typedText,\n            reverse: reverse,\n            a: a,\n            newText: newText\n        })\n      }\n            \n      init(type) {\n        var log = document.getElementById(\"log\");\n      \n        if (type === \"stop\") {\n            this.setState({\n                n: 'start'\n            });\n          \n          clearInterval(AppManager.interval);\n          clearInterval(AppManager.primaryInterval);\n        }\n      \n        if (type === \"start\") {\n            this.setState({\n                n: 'stop'\n            });\n\n            AppManager.interval = setInterval((interval) => {\n                this.getText();\n                log.innerHTML = this.state.newText;\n            }, AppManager.newIntervalTime);\n        }\n      }\n  \n    render (){\n\n      // Custom styling for resume view\n      let HeaderContainerStyle = (\n        this.props.resumePage === true \n        ? {\n            padding: '3% 1% 5% 1%',\n          } \n        : {\n          padding: '4% 1%',\n        }\n      )\n      let NameStyle = (\n        this.props.resumePage === true \n        ? {\n            fontSize: '46px',\n          } \n        : {}\n      )\n      let HeaderTextStyle = (\n        this.props.resumePage === true \n        ? {\n            textAlign: 'center',\n            fontSize: '42px',\n          } \n        : {\n          textAlign: 'center',\n        }\n      )\n      let LogStyle = (\n        this.props.resumePage === true \n        ? {\n            \n          } \n        : {}\n      )\n      let GlyphStyle = (\n        this.props.resumePage === true \n        ? {\n            //fontSize: '56px',\n          } \n        : {}\n      )\n\n        return (\n            <div id=\"header-container\" className=\"container\" \n              onClick={ ()=>{this.init(this.state.n)}}\n              style={HeaderContainerStyle}\n            >\n              <div>\n                <div id=\"name-container\">\n                  <h1 id=\"name\" style={NameStyle}><strong>SAMUEL WRIGHT</strong></h1>\n                </div>\n                <div className=\"header-text\" id=\"header-description\" \n                  style={HeaderTextStyle}>\n                  <h2>\n                    <span id=\"title\" >{/* For a static word */}</span>\n                    <span id=\"log\" style={LogStyle}></span>\n                    <span id='glyph' style={GlyphStyle}>|</span>\n                  </h2>\n                </div>\n              </div>\n              {this.props.resumePage === true ? \n                <div className='github-text'\n                  style={{\n                    textAlign: 'center',\n                    margin: 'auto',\n                    marginTop: '-20px',\n                  }}\n                >\n                  <span style={{\n                    fontSize: 28,\n                  }}>\n                    (609)<span style={{fontSize: 14,}}> </span>472-2897 &#8226; wsright987@gmail.com\n                  </span>\n                  <a  href=\"http://www.github.com/sleighs\" \n                    target=\"blank\"\n                    style={{\n                      color: 'white',\n                      fontSize: 38,\n                      display: 'block',\n                      textDecoration: 'none',\n                    }}\n                  >\n                    github.com/sleighs\n                  </a>\n                </div>\n              : <></> }\n            </div>\n        )\n    }\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}